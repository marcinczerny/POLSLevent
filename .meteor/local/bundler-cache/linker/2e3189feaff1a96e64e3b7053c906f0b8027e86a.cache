[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nGoogleMaps = Package['dburles:google-maps-manually-modified'].GoogleMaps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.js\":[\"./main.html\",\"meteor/accounts-base\",\"meteor/templating\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// client/main.js                                                                                                  //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.import('./main.html');var Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   //\nLists = new Meteor.Collection('lists');                                                                            // 5\nTodos = new Mongo.Collection('todos');                                                                             // 6\nMarkers = new Mongo.Collection('markers');                                                                         // 7\nMarkersinfo = new Meteor.Collection('Markersinfo');                                                                // 8\n//Info = new Mongo.Collection('info');                                                                             //\nAccounts.ui.config({                                                                                               // 10\n                                                                                                                   //\n    passwordSignupFields: 'USERNAME_ONLY'                                                                          // 12\n                                                                                                                   //\n});                                                                                                                // 10\n                                                                                                                   //\nRouter.configure({                                                                                                 // 16\n    layoutTemplate: 'main'                                                                                         // 17\n});                                                                                                                // 16\n                                                                                                                   //\nRouter.route('/register');                                                                                         // 20\nRouter.route('/login');                                                                                            // 21\nRouter.route('/eventy');                                                                                           // 22\nRouter.route('/moje_eventy');                                                                                      // 23\nRouter.route('/dodaj_event');                                                                                      // 24\nRouter.route('/grupy');                                                                                            // 25\nRouter.route('/moje_grupy');                                                                                       // 26\nRouter.route('/dodaj_grupe');                                                                                      // 27\nRouter.route('/', {                                                                                                // 28\n    name: 'home',                                                                                                  // 29\n    template: 'home'                                                                                               // 30\n});                                                                                                                // 28\nRouter.route('/list/:_id', {                                                                                       // 32\n    name: 'listPage',                                                                                              // 33\n    template: 'listPage',                                                                                          // 34\n    data: function () {                                                                                            // 35\n        function data() {                                                                                          // 35\n            var currentList = this.params._id;                                                                     // 36\n            return Lists.findOne({ _id: currentList });                                                            // 37\n        }                                                                                                          // 38\n                                                                                                                   //\n        return data;                                                                                               // 35\n    }()                                                                                                            // 35\n});                                                                                                                // 32\nTemplate.map.onCreated(function () {                                                                               // 40\n    GoogleMaps.ready('map', function (map) {                                                                       // 41\n        google.maps.event.addListener(map.instance, 'click', function (event) {                                    // 42\n            Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng(), owner: Meteor.userId() });          // 43\n        });                                                                                                        // 44\n        var curuser = Meteor.userId();                                                                             // 45\n        var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';                                                                 // 46\n        var image = {                                                                                              // 47\n            url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n            // This marker is 20 pixels wide by 32 pixels high.                                                    //\n            size: new google.maps.Size(20, 32),                                                                    // 50\n            // The origin for this image is (0, 0).                                                                //\n            origin: new google.maps.Point(0, 0),                                                                   // 52\n            // The anchor for this image is the base of the flagpole at (0, 32).                                   //\n            anchor: new google.maps.Point(0, 32)                                                                   // 54\n        };                                                                                                         // 47\n        var shape = {                                                                                              // 56\n            coords: [1, 1, 1, 20, 18, 20, 18, 1],                                                                  // 57\n            type: 'poly'                                                                                           // 58\n        };                                                                                                         // 56\n        var contentString = '<div id=\"content\">' + '<div id=\"siteNotice\">' + '</div>' + '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>' + '<div id=\"bodyContent\">' + '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' + 'sandstone rock formation in the southern part of the ' + 'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) ' + 'south west of the nearest large town, Alice Springs; 450&#160;km ' + '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major ' + 'features of the Uluru - Kata Tjuta National Park. Uluru is ' + 'sacred to the Pitjantjatjara and Yankunytjatjara, the ' + 'Aboriginal people of the area. It has many springs, waterholes, ' + 'rock caves and ancient paintings. Uluru is listed as a World ' + 'Heritage Site.</p>' + '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">' + 'https://en.wikipedia.org/w/index.php?title=Uluru</a> ' + '(last visited June 22, 2009).</p>' + '</div>' + '</div>';\n                                                                                                                   //\n        var infowindow = new google.maps.InfoWindow({                                                              // 81\n            content: contentString                                                                                 // 82\n        });                                                                                                        // 81\n                                                                                                                   //\n        var markers = {};                                                                                          // 85\n                                                                                                                   //\n        Markers.find().observe({                                                                                   // 87\n            added: function () {                                                                                   // 88\n                function added(document) {                                                                         // 88\n                                                                                                                   //\n                    var marker = new google.maps.Marker({                                                          // 90\n                        draggable: false,                                                                          // 91\n                        animation: google.maps.Animation.DROP,                                                     // 92\n                        position: new google.maps.LatLng(document.lat, document.lng),                              // 93\n                        map: map.instance,                                                                         // 94\n                        id: document._id,                                                                          // 95\n                        icon: image,                                                                               // 96\n                        shape: shape,                                                                              // 97\n                        userId: document.owner,                                                                    // 98\n                        title: document.title                                                                      // 99\n                                                                                                                   //\n                    });                                                                                            // 90\n                    if (Meteor.userId() == marker.userId) {                                                        // 103\n                        marker.addListener('dragend', function () {                                                // 104\n                            if (Meteor.userId() == marker.userId) {                                                // 105\n                                Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() } });\n                            } else {                                                                               // 105\n                                throw new Meteor.Error('No Access!');                                              // 106\n                            }                                                                                      // 106\n                        });                                                                                        // 107\n                    }                                                                                              // 107\n                    marker.addListener('rightclick', function () {                                                 // 108\n                        if (Meteor.userId() != marker.userId) {                                                    // 109\n                            throw new Meteor.Error(marker.userId);                                                 // 109\n                        }                                                                                          // 109\n                        console.log(\"Meteor.userId %s, \\n marker user %s\", Meteor.userId(), marker.userId);        // 110\n                        var zmienna = marker.id;                                                                   // 111\n                        markers[document._id] = marker;                                                            // 112\n                        marker.setMap(null);                                                                       // 113\n                                                                                                                   //\n                        Markers.remove({ _id: zmienna });                                                          // 115\n                    });                                                                                            // 116\n                    marker.addListener('click', function () {                                                      // 117\n                        infowindow.open(map, marker);                                                              // 118\n                        if (marker.getAnimation() !== null) {                                                      // 119\n                            marker.setAnimation(null);                                                             // 120\n                        } else {                                                                                   // 121\n                            marker.setAnimation(google.maps.Animation.BOUNCE);                                     // 122\n                        }                                                                                          // 123\n                    });                                                                                            // 124\n                                                                                                                   //\n                    markers[document._id] = marker;                                                                // 127\n                }                                                                                                  // 128\n                                                                                                                   //\n                return added;                                                                                      // 88\n            }(),                                                                                                   // 88\n            changed: function () {                                                                                 // 129\n                function changed(newDocument, oldDocument) {                                                       // 129\n                    markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });          // 130\n                }                                                                                                  // 131\n                                                                                                                   //\n                return changed;                                                                                    // 129\n            }(),                                                                                                   // 129\n            removed: function () {                                                                                 // 132\n                function removed(oldDocument) {                                                                    // 132\n                    markers[oldDocument._id].setMap(null);                                                         // 133\n                    google.maps.event.clearInstanceListeners(markers[oldDocument._id]);                            // 134\n                    delete markers[oldDocument._id];                                                               // 135\n                    //Markers.remove({_id: oldDocument._id});                                                      //\n                }                                                                                                  // 137\n                                                                                                                   //\n                return removed;                                                                                    // 132\n            }()                                                                                                    // 132\n        });                                                                                                        // 87\n    });                                                                                                            // 139\n});                                                                                                                // 140\n                                                                                                                   //\nMeteor.startup(function () {                                                                                       // 142\n    GoogleMaps.load();                                                                                             // 143\n});                                                                                                                // 144\n                                                                                                                   //\nTemplate.map.helpers({                                                                                             // 146\n    mapOptions: function () {                                                                                      // 147\n        function mapOptions() {                                                                                    // 147\n            if (GoogleMaps.loaded()) {                                                                             // 148\n                return {                                                                                           // 149\n                    center: new google.maps.LatLng(50.2880701, 18.6778916),                                        // 150\n                    zoom: 15                                                                                       // 151\n                };                                                                                                 // 149\n            }                                                                                                      // 153\n        }                                                                                                          // 154\n                                                                                                                   //\n        return mapOptions;                                                                                         // 147\n    }()                                                                                                            // 147\n});                                                                                                                // 146\n                                                                                                                   //\n/*Template.dodajznaczik.events({                                                                                   //\n    'submit form': function(event){                                                                                //\n      event.preventDefault();                                                                                      //\n      var nazwaznaczknika = $('[name=markername]').val();                                                          //\n      var latx=$('[name=x]').val();                                                                                //\n      var laty=$('[name=y]').val();                                                                                //\n       var opis=$('[name=windowsinfo]').val();                                                                     //\n       var currentUser = Meteor.userId();                                                                          //\n        //Info.insert({                                                                                            //\n         // nazwazn: nazwaznacznika,                                                                               //\n\t // x: latx,                                                                                                      //\n\t // y: laty,                                                                                                      //\n\t // opis: opis,                                                                                                   //\n          //createdBy: currentUser                                                                                 //\n      //});                                                                                                        //\n    }                                                                                                              //\n});*/                                                                                                              //\nTemplate.addList.events({                                                                                          // 174\n    'submit form': function () {                                                                                   // 175\n        function submitForm(event) {                                                                               // 175\n            event.preventDefault();                                                                                // 176\n            var listName = $('[name=listName]').val();                                                             // 177\n            var currentUser = Meteor.userId();                                                                     // 178\n                                                                                                                   //\n            Lists.insert({                                                                                         // 180\n                name: listName,                                                                                    // 181\n                createdBy: currentUser                                                                             // 182\n            }, function (error, results) {                                                                         // 180\n                Router.go('listPage', { _id: results });                                                           // 184\n            });                                                                                                    // 185\n            $('[name=listName]').val('');                                                                          // 186\n        }                                                                                                          // 187\n                                                                                                                   //\n        return submitForm;                                                                                         // 175\n    }()                                                                                                            // 175\n});                                                                                                                // 174\n                                                                                                                   //\nTemplate.lists_all.helpers({                                                                                       // 190\n    'list': function () {                                                                                          // 191\n        function list() {                                                                                          // 191\n            return Lists.find({}, { sort: { name: 1 } });                                                          // 192\n        }                                                                                                          // 193\n                                                                                                                   //\n        return list;                                                                                               // 191\n    }()                                                                                                            // 191\n});                                                                                                                // 190\n                                                                                                                   //\nTemplate.lists.helpers({                                                                                           // 196\n    'list': function () {                                                                                          // 197\n        function list() {                                                                                          // 197\n            var currentUser = Meteor.userId();                                                                     // 198\n            return Lists.find({ createdBy: currentUser }, { sort: { name: 1 } });                                  // 199\n        }                                                                                                          // 200\n                                                                                                                   //\n        return list;                                                                                               // 197\n    }()                                                                                                            // 197\n});                                                                                                                // 196\n                                                                                                                   //\nTemplate.todos.helpers({                                                                                           // 203\n    'todo': function () {                                                                                          // 204\n        function todo() {                                                                                          // 204\n            var currentList = this._id;                                                                            // 205\n            var currentUser = Meteor.userId();                                                                     // 206\n            return Todos.find({ listId: currentList, createdBy: currentUser }, { sort: { createdAt: -1 } });       // 207\n        }                                                                                                          // 208\n                                                                                                                   //\n        return todo;                                                                                               // 204\n    }()                                                                                                            // 204\n});                                                                                                                // 203\n                                                                                                                   //\nTemplate.addTodo.events({                                                                                          // 211\n    'submit form': function () {                                                                                   // 212\n        function submitForm(event) {                                                                               // 212\n            event.preventDefault();                                                                                // 213\n            var todoName = $('[name=\"todoName\"]').val();                                                           // 214\n            var currentUser = Meteor.userId();                                                                     // 215\n            var currentList = this._id;                                                                            // 216\n            Todos.insert({                                                                                         // 217\n                name: todoName,                                                                                    // 218\n                completed: false,                                                                                  // 219\n                createdAt: new Date(),                                                                             // 220\n                createdBy: currentUser,                                                                            // 221\n                listId: currentList                                                                                // 222\n            });                                                                                                    // 217\n            $('[name=\"todoName\"]').val('');                                                                        // 224\n        }                                                                                                          // 225\n                                                                                                                   //\n        return submitForm;                                                                                         // 212\n    }()                                                                                                            // 212\n});                                                                                                                // 211\n                                                                                                                   //\nTemplate.todoItem.events({                                                                                         // 228\n    'click .delete-todo': function () {                                                                            // 229\n        function clickDeleteTodo(event) {                                                                          // 229\n            event.preventDefault();                                                                                // 230\n            var documentId = this._id;                                                                             // 231\n            var confirm = window.confirm(\"Delete this task?\");                                                     // 232\n            if (confirm) {                                                                                         // 233\n                Todos.remove({ _id: documentId });                                                                 // 234\n            }                                                                                                      // 235\n        }                                                                                                          // 236\n                                                                                                                   //\n        return clickDeleteTodo;                                                                                    // 229\n    }(),                                                                                                           // 229\n    'keyup [name=todoItem]': function () {                                                                         // 237\n        function keyupNameTodoItem(event) {                                                                        // 237\n            if (event.which == 13 || event.which == 27) {                                                          // 238\n                $(event.target).blur();                                                                            // 239\n            } else {                                                                                               // 240\n                var documentId = this._id;                                                                         // 241\n                var todoItem = $(event.target).val();                                                              // 242\n                Todos.update({ _id: documentId }, { $set: { name: todoItem } });                                   // 243\n            }                                                                                                      // 244\n        }                                                                                                          // 245\n                                                                                                                   //\n        return keyupNameTodoItem;                                                                                  // 237\n    }(),                                                                                                           // 237\n    'change [type=checkbox]': function () {                                                                        // 246\n        function changeTypeCheckbox() {                                                                            // 246\n            var documentId = this._id;                                                                             // 247\n            var isCompleted = this.completed;                                                                      // 248\n            if (isCompleted) {                                                                                     // 249\n                Todos.update({ _id: documentId }, { $set: { completed: false } });                                 // 250\n                console.log(\"Task marked as incomplete.\");                                                         // 251\n            } else {                                                                                               // 252\n                Todos.update({ _id: documentId }, { $set: { completed: true } });                                  // 253\n                console.log(\"Task marked as complete.\");                                                           // 254\n            }                                                                                                      // 255\n        }                                                                                                          // 256\n                                                                                                                   //\n        return changeTypeCheckbox;                                                                                 // 246\n    }()                                                                                                            // 246\n                                                                                                                   //\n});                                                                                                                // 228\n                                                                                                                   //\nTemplate.todoItem.helpers({                                                                                        // 260\n    'checked': function () {                                                                                       // 261\n        function checked() {                                                                                       // 261\n            var isCompleted = this.completed;                                                                      // 262\n            if (isCompleted) {                                                                                     // 263\n                return \"checked\";                                                                                  // 264\n            } else {                                                                                               // 265\n                return \"\";                                                                                         // 266\n            }                                                                                                      // 267\n        }                                                                                                          // 268\n                                                                                                                   //\n        return checked;                                                                                            // 261\n    }()                                                                                                            // 261\n});                                                                                                                // 260\n                                                                                                                   //\nTemplate.todosCount.helpers({                                                                                      // 271\n    'totalTodos': function () {                                                                                    // 272\n        function totalTodos() {                                                                                    // 272\n            var currentList = this._id;                                                                            // 273\n            return Todos.find({ listId: currentList }).count();                                                    // 274\n        }                                                                                                          // 275\n                                                                                                                   //\n        return totalTodos;                                                                                         // 272\n    }(),                                                                                                           // 272\n    'completedTodos': function () {                                                                                // 276\n        function completedTodos() {                                                                                // 276\n            var currentList = this._id;                                                                            // 277\n            return Todos.find({ listId: currentList, completed: true }).count();                                   // 278\n        }                                                                                                          // 279\n                                                                                                                   //\n        return completedTodos;                                                                                     // 276\n    }()                                                                                                            // 276\n});                                                                                                                // 271\n                                                                                                                   //\nTemplate.login.events({                                                                                            // 282\n    'submit form': function () {                                                                                   // 283\n        function submitForm(event) {                                                                               // 283\n            event.preventDefault();                                                                                // 284\n            var username = $('[name=username]').val();                                                             // 285\n            var password = $('[name=password]').val();                                                             // 286\n            Meteor.loginWithPassword(username, password, function (error) {                                        // 287\n                if (error) {                                                                                       // 288\n                    console.log(error.reason);                                                                     // 289\n                } else {                                                                                           // 290\n                    Router.go(\"home\");                                                                             // 291\n                }                                                                                                  // 292\n            });                                                                                                    // 293\n        }                                                                                                          // 294\n                                                                                                                   //\n        return submitForm;                                                                                         // 283\n    }()                                                                                                            // 283\n});                                                                                                                // 282\n                                                                                                                   //\nTemplate.register.events({                                                                                         // 297\n    'submit form': function () {                                                                                   // 298\n        function submitForm(event) {                                                                               // 298\n            event.preventDefault();                                                                                // 299\n            var username = $('[name=username]').val();                                                             // 300\n            var password = $('[name=password]').val();                                                             // 301\n            Accounts.createUser({                                                                                  // 302\n                username: username,                                                                                // 303\n                password: password                                                                                 // 304\n            }, function (error) {                                                                                  // 302\n                if (error) {                                                                                       // 306\n                    console.log(error.reason);                                                                     // 307\n                } else {                                                                                           // 308\n                    Router.go(\"home\");                                                                             // 309\n                }                                                                                                  // 310\n            });                                                                                                    // 311\n        }                                                                                                          // 312\n                                                                                                                   //\n        return submitForm;                                                                                         // 298\n    }()                                                                                                            // 298\n});                                                                                                                // 297\nTemplate.navigation.events({                                                                                       // 314\n    'click .logout': function () {                                                                                 // 315\n        function clickLogout(event) {                                                                              // 315\n            event.preventDefault();                                                                                // 316\n            Meteor.logout();                                                                                       // 317\n            Router.go('login');                                                                                    // 318\n        }                                                                                                          // 319\n                                                                                                                   //\n        return clickLogout;                                                                                        // 315\n    }()                                                                                                            // 315\n                                                                                                                   //\n});                                                                                                                // 314\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,aAAP;AACA,SAAS,QAAT,QAAyB,sBAAzB;AACA,SAAS,QAAT,QAAyB,mBAAzB;;AAEA,QAAQ,IAAI,OAAO,UAAX,CAAsB,OAAtB,CAAR;AACA,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAR;AACA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;AACA,cAAc,IAAI,OAAO,UAAX,CAAsB,aAAtB,CAAd;;AAEA,SAAS,EAAT,CAAY,MAAZ,CAAmB;;AAEjB,0BAAsB;;AAFL,CAAnB;;AAMA,OAAO,SAAP,CAAiB;AACb,oBAAgB;AADH,CAAjB;;AAIA,OAAO,KAAP,CAAa,WAAb;AACA,OAAO,KAAP,CAAa,QAAb;AACA,OAAO,KAAP,CAAa,SAAb;AACA,OAAO,KAAP,CAAa,cAAb;AACA,OAAO,KAAP,CAAa,cAAb;AACA,OAAO,KAAP,CAAa,QAAb;AACA,OAAO,KAAP,CAAa,aAAb;AACA,OAAO,KAAP,CAAa,cAAb;AACA,OAAO,KAAP,CAAa,GAAb,EAAiB;AACf,UAAM,MADS;AAEf,cAAU;AAFK,CAAjB;AAIA,OAAO,KAAP,CAAa,YAAb,EAA2B;AAC1B,UAAM,UADoB;AAE1B,cAAU,UAFgB;AAGvB;AAAM,wBAAU;AACZ,gBAAI,cAAc,KAAK,MAAL,CAAY,GAA9B;AACA,mBAAO,MAAM,OAAN,CAAc,EAAE,KAAK,WAAP,EAAd,CAAP;AACH;;AAHD;AAAA;AAHuB,CAA3B;AAQA,SAAS,GAAT,CAAa,SAAb,CAAuB,YAAW;AAC9B,eAAW,KAAX,CAAiB,KAAjB,EAAwB,UAAS,GAAT,EAAc;AACpC,eAAO,IAAP,CAAY,KAAZ,CAAkB,WAAlB,CAA8B,IAAI,QAAlC,EAA4C,OAA5C,EAAqD,UAAS,KAAT,EAAgB;AACnE,oBAAQ,MAAR,CAAe,EAAE,KAAK,MAAM,MAAN,CAAa,GAAb,EAAP,EAA2B,KAAK,MAAM,MAAN,CAAa,GAAb,EAAhC,EAAoD,OAAO,OAAO,MAAP,EAA3D,EAAf;AACD,SAFD;AAGA,YAAI,UAAU,OAAO,MAAP,EAAd;AACA,YAAI,SAAS,4BAAb;AACC,YAAI,QAAQ;AACT,iBAAK,gGADI;;AAGT,kBAAM,IAAI,OAAO,IAAP,CAAY,IAAhB,CAAqB,EAArB,EAAyB,EAAzB,CAHG;;AAKT,oBAAQ,IAAI,OAAO,IAAP,CAAY,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CALC;;AAOT,oBAAQ,IAAI,OAAO,IAAP,CAAY,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB;AAPC,SAAZ;AASL,YAAI,QAAQ;AACJ,oBAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,CADJ;AAEJ,kBAAM;AAFF,SAAZ;AAIM,YAAI,gBAAgB,uBAChB,uBADgB,GAEhB,QAFgB,GAGhB,uDAHgB,GAIhB,wBAJgB,GAKhB,qEALgB,GAMhB,uDANgB,GAOhB,2EAPgB,GAQhB,mEARgB,GAShB,gEATgB,GAUhB,6DAVgB,GAWhB,wDAXgB,GAYhB,kEAZgB,GAahB,+DAbgB,GAchB,oBAdgB,GAehB,oGAfgB,GAgBhB,uDAhBgB,GAiBhB,mCAjBgB,GAkBhB,QAlBgB,GAmBhB,QAnBJ;;AAqBC,YAAI,aAAa,IAAI,OAAO,IAAP,CAAY,UAAhB,CAA2B;AAC3C,qBAAS;AADkC,SAA3B,CAAjB;;AAIH,YAAI,UAAU,EAAd;;AAEA,gBAAQ,IAAR,GAAe,OAAf,CAAuB;AACrB;AAAO,+BAAU,QAAV,EAAoB;;AAEzB,wBAAI,SAAS,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB;AAClC,mCAAW,KADuB;AAElC,mCAAW,OAAO,IAAP,CAAY,SAAZ,CAAsB,IAFC;AAGlC,kCAAU,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB,SAAS,GAAhC,EAAqC,SAAS,GAA9C,CAHwB;AAIlC,6BAAK,IAAI,QAJyB;AAKlC,4BAAI,SAAS,GALqB;AAMzC,8BAAM,KANmC;AAOlC,+BAAO,KAP2B;AAQxC,gCAAQ,SAAS,KARuB;AASzC,+BAAO,SAAS;;AATyB,qBAAvB,CAAb;AAaP,wBAAG,OAAO,MAAP,MAAiB,OAAO,MAA3B,EAAkC;AAChC,+BAAO,WAAP,CAAmB,SAAnB,EAA8B,YAAW;AACvC,gCAAG,OAAO,MAAP,MAAiB,OAAO,MAA3B,EAAkC;AAAC,wCAAQ,MAAR,CAAe,OAAO,EAAtB,EAA0B,EAAE,MAAM,EAAE,KAAK,MAAM,MAAN,CAAa,GAAb,EAAP,EAA2B,KAAK,MAAM,MAAN,CAAa,GAAb,EAAhC,EAAR,EAA1B;AAA0F,6BAA7H,MACI;AAAC,sCAAM,IAAI,OAAO,KAAX,CAAiB,YAAjB,CAAN;AAAsC;AACvC,yBAHN;AAGS;AACJ,2BAAO,WAAP,CAAmB,YAAnB,EAAiC,YAAW;AACjD,4BAAG,OAAO,MAAP,MAAiB,OAAO,MAA3B,EAAkC;AAAC,kCAAM,IAAI,OAAO,KAAX,CAAiB,OAAO,MAAxB,CAAN;AAAuC;AACnE,gCAAQ,GAAR,CAAY,qCAAZ,EAAkD,OAAO,MAAP,EAAlD,EAAkE,OAAO,MAAzE;AACA,4BAAI,UAAQ,OAAO,EAAnB;AACA,gCAAQ,SAAS,GAAjB,IAAwB,MAAxB;AACA,+BAAO,MAAP,CAAc,IAAd;;AAEA,gCAAQ,MAAR,CAAe,EAAC,KAAK,OAAN,EAAf;AACD,qBARD;AASP,2BAAO,WAAP,CAAmB,OAAnB,EAA4B,YAAW;AAChC,mCAAW,IAAX,CAAgB,GAAhB,EAAqB,MAArB;AACL,4BAAI,OAAO,YAAP,OAA0B,IAA9B,EAAoC;AAC/B,mCAAO,YAAP,CAAoB,IAApB;AACD,yBAFJ,MAEU;AACL,mCAAO,YAAP,CAAoB,OAAO,IAAP,CAAY,SAAZ,CAAsB,MAA1C;AACD;AACE,qBAPR;;AAUO,4BAAQ,SAAS,GAAjB,IAAwB,MAAxB;AACD;;AAxCD;AAAA,eADqB;AA0CrB;AAAS,iCAAU,WAAV,EAAuB,WAAvB,EAAoC;AAC3C,4BAAQ,YAAY,GAApB,EAAyB,WAAzB,CAAqC,EAAE,KAAK,YAAY,GAAnB,EAAwB,KAAK,YAAY,GAAzC,EAArC;AACD;;AAFD;AAAA,eA1CqB;AA6CrB;AAAS,iCAAU,WAAV,EAAuB;AAC9B,4BAAQ,YAAY,GAApB,EAAyB,MAAzB,CAAgC,IAAhC;AACA,2BAAO,IAAP,CAAY,KAAZ,CAAkB,sBAAlB,CAAyC,QAAQ,YAAY,GAApB,CAAzC;AACA,2BAAO,QAAQ,YAAY,GAApB,CAAP;;AAED;;AALD;AAAA;AA7CqB,SAAvB;AAoDD,KAlGD;AAmGD,CApGH;;AAsGA,OAAO,OAAP,CAAe,YAAW;AACxB,eAAW,IAAX;AACD,CAFD;;AAIA,SAAS,GAAT,CAAa,OAAb,CAAqB;AACnB;AAAY,8BAAW;AACrB,gBAAI,WAAW,MAAX,EAAJ,EAAyB;AACvB,uBAAO;AACL,4BAAQ,IAAI,OAAO,IAAP,CAAY,MAAhB,CAAuB,UAAvB,EAAmC,UAAnC,CADH;AAEL,0BAAM;AAFD,iBAAP;AAID;AACF;;AAPD;AAAA;AADmB,CAArB;;;;;;;;;;;;;;;;;;;AA4BA,SAAS,OAAT,CAAiB,MAAjB,CAAwB;AACpB;AAAe,4BAAS,KAAT,EAAe;AAC5B,kBAAM,cAAN;AACA,gBAAI,WAAW,EAAE,iBAAF,EAAqB,GAArB,EAAf;AACA,gBAAI,cAAc,OAAO,MAAP,EAAlB;;AAEA,kBAAM,MAAN,CAAa;AACT,sBAAM,QADG;AAET,2BAAW;AAFF,aAAb,EAGE,UAAS,KAAT,EAAgB,OAAhB,EAAwB;AACxB,uBAAO,EAAP,CAAU,UAAV,EAAsB,EAAE,KAAK,OAAP,EAAtB;AACH,aALC;AAMA,cAAE,iBAAF,EAAqB,GAArB,CAAyB,EAAzB;AACD;;AAZD;AAAA;AADoB,CAAxB;;AAgBA,SAAS,SAAT,CAAmB,OAAnB,CAA2B;AACvB;AAAQ,wBAAU;AACd,mBAAO,MAAM,IAAN,CAAW,EAAX,EAAe,EAAC,MAAM,EAAC,MAAM,CAAP,EAAP,EAAf,CAAP;AACH;;AAFD;AAAA;AADuB,CAA3B;;AAMA,SAAS,KAAT,CAAe,OAAf,CAAuB;AACnB;AAAQ,wBAAU;AACjB,gBAAI,cAAc,OAAO,MAAP,EAAlB;AACG,mBAAO,MAAM,IAAN,CAAW,EAAC,WAAW,WAAZ,EAAX,EAAqC,EAAC,MAAM,EAAC,MAAM,CAAP,EAAP,EAArC,CAAP;AACH;;AAHD;AAAA;AADmB,CAAvB;;AAOA,SAAS,KAAT,CAAe,OAAf,CAAuB;AACnB;AAAQ,wBAAU;AACd,gBAAI,cAAc,KAAK,GAAvB;AACA,gBAAI,cAAc,OAAO,MAAP,EAAlB;AACA,mBAAO,MAAM,IAAN,CAAW,EAAE,QAAQ,WAAV,EAAuB,WAAW,WAAlC,EAAX,EAA4D,EAAC,MAAM,EAAC,WAAW,CAAC,CAAb,EAAP,EAA5D,CAAP;AACH;;AAJD;AAAA;AADmB,CAAvB;;AAQA,SAAS,OAAT,CAAiB,MAAjB,CAAwB;AACpB;AAAe,4BAAS,KAAT,EAAe;AAC9B,kBAAM,cAAN;AACA,gBAAI,WAAW,EAAE,mBAAF,EAAuB,GAAvB,EAAf;AACA,gBAAI,cAAc,OAAO,MAAP,EAAlB;AACA,gBAAI,cAAc,KAAK,GAAvB;AACA,kBAAM,MAAN,CAAa;AACT,sBAAM,QADG;AAET,2BAAW,KAFF;AAGT,2BAAW,IAAI,IAAJ,EAHF;AAIT,2BAAW,WAJF;AAKT,wBAAQ;AALC,aAAb;AAOA,cAAE,mBAAF,EAAuB,GAAvB,CAA2B,EAA3B;AACH;;AAbG;AAAA;AADoB,CAAxB;;AAiBA,SAAS,QAAT,CAAkB,MAAlB,CAAyB;AACrB;AAAsB,iCAAS,KAAT,EAAe;AACrC,kBAAM,cAAN;AACA,gBAAI,aAAa,KAAK,GAAtB;AACA,gBAAI,UAAU,OAAO,OAAP,CAAe,mBAAf,CAAd;AACA,gBAAG,OAAH,EAAW;AACP,sBAAM,MAAN,CAAa,EAAE,KAAK,UAAP,EAAb;AACH;AACJ;;AAPG;AAAA,OADqB;AASxB;AAAyB,mCAAS,KAAT,EAAe;AACrC,gBAAG,MAAM,KAAN,IAAe,EAAf,IAAqB,MAAM,KAAN,IAAe,EAAvC,EAA0C;AACtC,kBAAE,MAAM,MAAR,EAAgB,IAAhB;AACH,aAFD,MAEO;AACH,oBAAI,aAAa,KAAK,GAAtB;AACA,oBAAI,WAAW,EAAE,MAAM,MAAR,EAAgB,GAAhB,EAAf;AACA,sBAAM,MAAN,CAAa,EAAE,KAAK,UAAP,EAAb,EAAkC,EAAC,MAAM,EAAE,MAAM,QAAR,EAAP,EAAlC;AACH;AACJ;;AARA;AAAA,OATwB;AAkBxB;AAA0B,sCAAU;AACjC,gBAAI,aAAa,KAAK,GAAtB;AACA,gBAAI,cAAc,KAAK,SAAvB;AACA,gBAAG,WAAH,EAAe;AACX,sBAAM,MAAN,CAAa,EAAE,KAAK,UAAP,EAAb,EAAkC,EAAC,MAAM,EAAE,WAAW,KAAb,EAAP,EAAlC;AACA,wBAAQ,GAAR,CAAY,4BAAZ;AACH,aAHD,MAGO;AACH,sBAAM,MAAN,CAAa,EAAE,KAAK,UAAP,EAAb,EAAkC,EAAC,MAAM,EAAE,WAAW,IAAb,EAAP,EAAlC;AACA,wBAAQ,GAAR,CAAY,0BAAZ;AACH;AACH;;AAVD;AAAA;;AAlBwB,CAAzB;;AAgCA,SAAS,QAAT,CAAkB,OAAlB,CAA0B;AACtB;AAAW,2BAAU;AACjB,gBAAI,cAAc,KAAK,SAAvB;AACA,gBAAG,WAAH,EAAe;AACX,uBAAO,SAAP;AACH,aAFD,MAEO;AACH,uBAAO,EAAP;AACH;AACJ;;AAPD;AAAA;AADsB,CAA1B;;AAWA,SAAS,UAAT,CAAoB,OAApB,CAA4B;AACxB;AAAc,8BAAU;AACvB,gBAAI,cAAc,KAAK,GAAvB;AACG,mBAAO,MAAM,IAAN,CAAW,EAAE,QAAQ,WAAV,EAAX,EAAoC,KAApC,EAAP;AACH;;AAHD;AAAA,OADwB;AAKxB;AAAkB,kCAAU;AAC3B,gBAAI,cAAc,KAAK,GAAvB;AACG,mBAAO,MAAM,IAAN,CAAW,EAAE,QAAQ,WAAV,EAAuB,WAAW,IAAlC,EAAX,EAAqD,KAArD,EAAP;AACH;;AAHD;AAAA;AALwB,CAA5B;;AAWA,SAAS,KAAT,CAAe,MAAf,CAAsB;AAClB;AAAe,4BAAS,KAAT,EAAe;AAC1B,kBAAM,cAAN;AACA,gBAAI,WAAW,EAAE,iBAAF,EAAqB,GAArB,EAAf;AACA,gBAAI,WAAW,EAAE,iBAAF,EAAqB,GAArB,EAAf;AACA,mBAAO,iBAAP,CAAyB,QAAzB,EAAmC,QAAnC,EAA6C,UAAS,KAAT,EAAe;AAC3D,oBAAG,KAAH,EAAS;AACT,4BAAQ,GAAR,CAAY,MAAM,MAAlB;AACF,iBAFE,MAEI;AACH,2BAAO,EAAP,CAAU,MAAV;AACH;AACE,aAND;AAOH;;AAXD;AAAA;AADkB,CAAtB;;AAeA,SAAS,QAAT,CAAkB,MAAlB,CAAyB;AACrB;AAAe,4BAAS,KAAT,EAAe;AAC1B,kBAAM,cAAN;AACA,gBAAI,WAAW,EAAE,iBAAF,EAAqB,GAArB,EAAf;AACA,gBAAI,WAAW,EAAE,iBAAF,EAAqB,GAArB,EAAf;AACA,qBAAS,UAAT,CAAoB;AAChB,0BAAU,QADM;AAEhB,0BAAU;AAFM,aAApB,EAGI,UAAS,KAAT,EAAe;AACf,oBAAG,KAAH,EAAS;AACZ,4BAAQ,GAAR,CAAY,MAAM,MAAlB;AACF,iBAFK,MAEC;AACJ,2BAAO,EAAP,CAAU,MAAV;AACH;AACH,aATK;AAUH;;AAdD;AAAA;AADqB,CAAzB;AAiBA,SAAS,UAAT,CAAoB,MAApB,CAA2B;AACvB;AAAiB,6BAAS,KAAT,EAAe;AAC5B,kBAAM,cAAN;AACA,mBAAO,MAAP;AACA,mBAAO,EAAP,CAAU,OAAV;AACH;;AAJD;AAAA;;AADuB,CAA3B,wH","file":"/app.js","sourcesContent":["import './main.html';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Template } from 'meteor/templating';\n\nLists = new Meteor.Collection('lists');\nTodos = new Mongo.Collection('todos');\nMarkers = new Mongo.Collection('markers');\nMarkersinfo = new Meteor.Collection('Markersinfo');\n//Info = new Mongo.Collection('info');\nAccounts.ui.config({\n\n  passwordSignupFields: 'USERNAME_ONLY',\n\n});\n\nRouter.configure({\n    layoutTemplate: 'main'\n});\n\nRouter.route('/register');\nRouter.route('/login');\nRouter.route('/eventy');\nRouter.route('/moje_eventy');\nRouter.route('/dodaj_event');\nRouter.route('/grupy');\nRouter.route('/moje_grupy');\nRouter.route('/dodaj_grupe');\nRouter.route('/',{\n\t name: 'home',\n\t template: 'home'\n});\nRouter.route('/list/:_id', {\n\tname: 'listPage',\n\ttemplate: 'listPage',\n    data: function(){\n        var currentList = this.params._id;\n        return Lists.findOne({ _id: currentList });\n    },\n});\nTemplate.map.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng(), owner: Meteor.userId() });\n      });\n      var curuser = Meteor.userId();\n      var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n       var image = {\n          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n          // This marker is 20 pixels wide by 32 pixels high.\n          size: new google.maps.Size(20, 32),\n          // The origin for this image is (0, 0).\n          origin: new google.maps.Point(0, 0),\n          // The anchor for this image is the base of the flagpole at (0, 32).\n          anchor: new google.maps.Point(0, 32)\n        };\n\t var shape = {\n          coords: [1, 1, 1, 20, 18, 20, 18, 1],\n          type: 'poly'\n        };\n        var contentString = '<div id=\"content\">'+\n            '<div id=\"siteNotice\">'+\n            '</div>'+\n            '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>'+\n            '<div id=\"bodyContent\">'+\n            '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +\n            'sandstone rock formation in the southern part of the '+\n            'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+\n            'south west of the nearest large town, Alice Springs; 450&#160;km '+\n            '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+\n            'features of the Uluru - Kata Tjuta National Park. Uluru is '+\n            'sacred to the Pitjantjatjara and Yankunytjatjara, the '+\n            'Aboriginal people of the area. It has many springs, waterholes, '+\n            'rock caves and ancient paintings. Uluru is listed as a World '+\n            'Heritage Site.</p>'+\n            '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">'+\n            'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+\n            '(last visited June 22, 2009).</p>'+\n            '</div>'+\n            '</div>';\n\n         var infowindow = new google.maps.InfoWindow({\n          content: contentString\n        });\n\n      var markers = {};\n      \n      Markers.find().observe({\n        added: function (document) {\n\t\n          var marker = new google.maps.Marker({\n            draggable: false,\n            animation: google.maps.Animation.DROP,\n            position: new google.maps.LatLng(document.lat, document.lng),\n            map: map.instance,\n            id: document._id,\n\t    icon: image,\n            shape: shape,\n\t     userId: document.owner,\n\t    title: document.title,\n\t\t\n\t    \n          });\n\t  if(Meteor.userId()==marker.userId){\n\t    marker.addListener('dragend', function() {\n\t      if(Meteor.userId()==marker.userId){Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() }});}\n\t      else{throw new Meteor.Error('No Access!');}\n          });}\n          marker.addListener('rightclick', function() {\n\t    if(Meteor.userId()!=marker.userId){throw new Meteor.Error(marker.userId);}\n            console.log(\"Meteor.userId %s, \\n marker user %s\",Meteor.userId(),marker.userId);\n            var zmienna=marker.id;\n            markers[document._id] = marker;\n            marker.setMap(null);\n\t    \n            Markers.remove({_id: zmienna });\n          });\n\t  marker.addListener('click', function() {\n          infowindow.open(map, marker);\n\t    if (marker.getAnimation() !== null) {\n          marker.setAnimation(null);\n        } else {\n          marker.setAnimation(google.maps.Animation.BOUNCE);\n        }\n          });\n        \n\n          markers[document._id] = marker;\n        },\n        changed: function (newDocument, oldDocument) {\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });\n        },\n        removed: function (oldDocument) {\n          markers[oldDocument._id].setMap(null);\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);\n          delete markers[oldDocument._id];\n          //Markers.remove({_id: oldDocument._id});\n        }\n      });\n    });\n  });\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map.helpers({\n  mapOptions: function() {\n    if (GoogleMaps.loaded()) {\n      return {\n        center: new google.maps.LatLng(50.2880701, 18.6778916),\n        zoom: 15\n      };\n    }\n  }\n});\n\n/*Template.dodajznaczik.events({\n    'submit form': function(event){\n      event.preventDefault();\n      var nazwaznaczknika = $('[name=markername]').val();\n      var latx=$('[name=x]').val();\n      var laty=$('[name=y]').val();\n       var opis=$('[name=windowsinfo]').val();\n       var currentUser = Meteor.userId();\n        //Info.insert({\n         // nazwazn: nazwaznacznika,\n\t // x: latx,\n\t // y: laty,\n\t // opis: opis,\n          //createdBy: currentUser\n      //});\n    }\n});*/\nTemplate.addList.events({\n    'submit form': function(event){\n      event.preventDefault();\n      var listName = $('[name=listName]').val();\n      var currentUser = Meteor.userId();\n     \n      Lists.insert({\n          name: listName,\n          createdBy: currentUser\n      },function(error, results){\n        Router.go('listPage', { _id: results });\n  \t\t});\n      $('[name=listName]').val('');\n    }\n});\n\nTemplate.lists_all.helpers({\n    'list': function(){\n        return Lists.find({}, {sort: {name: 1}});\n    }\n});\n\nTemplate.lists.helpers({\n    'list': function(){\n    \tvar currentUser = Meteor.userId();\n        return Lists.find({createdBy: currentUser}, {sort: {name: 1}});\n    }\n});\n\nTemplate.todos.helpers({\n    'todo': function(){\n        var currentList = this._id;\n        var currentUser = Meteor.userId();\n        return Todos.find({ listId: currentList, createdBy: currentUser }, {sort: {createdAt: -1}})\n    }\n});\n\nTemplate.addTodo.events({\n    'submit form': function(event){\n    event.preventDefault();\n    var todoName = $('[name=\"todoName\"]').val();\n    var currentUser = Meteor.userId();\n    var currentList = this._id;\n    Todos.insert({\n        name: todoName,\n        completed: false,\n        createdAt: new Date(),\n        createdBy: currentUser,\n        listId: currentList\n    });\n    $('[name=\"todoName\"]').val('');\n}\n});\n\nTemplate.todoItem.events({\n    'click .delete-todo': function(event){\n    event.preventDefault();\n    var documentId = this._id;\n    var confirm = window.confirm(\"Delete this task?\");\n    if(confirm){\n        Todos.remove({ _id: documentId });\n    }\n},\n\t'keyup [name=todoItem]': function(event){\n    if(event.which == 13 || event.which == 27){\n        $(event.target).blur();\n    } else {\n        var documentId = this._id;\n        var todoItem = $(event.target).val();\n        Todos.update({ _id: documentId }, {$set: { name: todoItem }});\n    }\n},\n\t'change [type=checkbox]': function(){\n    var documentId = this._id;\n    var isCompleted = this.completed;\n    if(isCompleted){\n        Todos.update({ _id: documentId }, {$set: { completed: false }});\n        console.log(\"Task marked as incomplete.\");\n    } else {\n        Todos.update({ _id: documentId }, {$set: { completed: true }});\n        console.log(\"Task marked as complete.\");\n    }\n\t}\n\n});\n\nTemplate.todoItem.helpers({\n    'checked': function(){\n        var isCompleted = this.completed;\n        if(isCompleted){\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    }\n});\n\nTemplate.todosCount.helpers({\n    'totalTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList }).count();\n    },\n    'completedTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList, completed: true }).count();\n    }\n});\n\nTemplate.login.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Meteor.loginWithPassword(username, password, function(error){\n        \tif(error){\n        \tconsole.log(error.reason);\n    \t\t} else {\n       \t\t Router.go(\"home\");\n   \t\t\t}\n        });\n    }\n});\n\nTemplate.register.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Accounts.createUser({\n            username: username,\n            password: password\n        },  function(error){\n            if(error){\n        \tconsole.log(error.reason);\n   \t\t\t} else {\n        \tRouter.go(\"home\");\n    \t}\n\t\t});\n    }\n});\nTemplate.navigation.events({\n    'click .logout': function(event){\n        event.preventDefault();\n        Meteor.logout();\n        Router.go('login');\n    }\n\n});\n"]}}]