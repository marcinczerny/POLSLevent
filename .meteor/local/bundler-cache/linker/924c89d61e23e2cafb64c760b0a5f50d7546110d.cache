[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nGoogleMaps = Package['dburles:google-maps-manually-modified'].GoogleMaps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.js\":[\"./main.html\",\"meteor/accounts-base\",\"meteor/templating\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.js                                                                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.import('./main.html');var Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});\n                                                                                                             // 2\n                                                                                                             // 3\n                                                                                                             //\nLists = new Meteor.Collection('lists');                                                                      // 5\nTodos = new Mongo.Collection('todos');                                                                       // 6\nMarkers = new Mongo.Collection('markers');                                                                   // 7\nInfo = new Mongo.Collection('info');                                                                         // 8\nAccounts.ui.config({                                                                                         // 9\n                                                                                                             //\n  passwordSignupFields: 'USERNAME_ONLY'                                                                      // 11\n                                                                                                             //\n});                                                                                                          // 9\n                                                                                                             //\nRouter.configure({                                                                                           // 15\n  layoutTemplate: 'main'                                                                                     // 16\n});                                                                                                          // 15\n                                                                                                             //\nRouter.route('/register');                                                                                   // 19\nRouter.route('/login');                                                                                      // 20\nRouter.route('/eventy');                                                                                     // 21\nRouter.route('/moje_eventy');                                                                                // 22\nRouter.route('/dodaj_event');                                                                                // 23\nRouter.route('/grupy');                                                                                      // 24\nRouter.route('/moje_grupy');                                                                                 // 25\nRouter.route('/dodaj_grupe');                                                                                // 26\nRouter.route('/', {                                                                                          // 27\n  name: 'home',                                                                                              // 28\n  template: 'home'                                                                                           // 29\n});                                                                                                          // 27\nRouter.route('/list/:_id', {                                                                                 // 31\n  name: 'listPage',                                                                                          // 32\n  template: 'listPage',                                                                                      // 33\n  data: function () {                                                                                        // 34\n    function data() {                                                                                        // 34\n      var currentList = this.params._id;                                                                     // 35\n      return Lists.findOne({ _id: currentList });                                                            // 36\n    }                                                                                                        // 37\n                                                                                                             //\n    return data;                                                                                             // 34\n  }()                                                                                                        // 34\n});                                                                                                          // 31\nTemplate.map.onCreated(function () {                                                                         // 39\n  GoogleMaps.ready('map', function (map) {                                                                   // 40\n    google.maps.event.addListener(map.instance, 'click', function (event) {                                  // 41\n      Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });                                  // 42\n    });                                                                                                      // 43\n    var curuser = Meteor.userId();                                                                           // 44\n    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';                                                               // 45\n    var image = {                                                                                            // 46\n      url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n      // This marker is 20 pixels wide by 32 pixels high.                                                    //\n      size: new google.maps.Size(20, 32),                                                                    // 49\n      // The origin for this image is (0, 0).                                                                //\n      origin: new google.maps.Point(0, 0),                                                                   // 51\n      // The anchor for this image is the base of the flagpole at (0, 32).                                   //\n      anchor: new google.maps.Point(0, 32)                                                                   // 53\n    };                                                                                                       // 46\n    var shape = {                                                                                            // 55\n      coords: [1, 1, 1, 20, 18, 20, 18, 1],                                                                  // 56\n      type: 'poly'                                                                                           // 57\n    };                                                                                                       // 55\n    var contentString = '<div id=\"content\">' + '<div id=\"siteNotice\">' + '</div>' + '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>' + '<div id=\"bodyContent\">' + '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' + 'sandstone rock formation in the southern part of the ' + 'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) ' + 'south west of the nearest large town, Alice Springs; 450&#160;km ' + '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major ' + 'features of the Uluru - Kata Tjuta National Park. Uluru is ' + 'sacred to the Pitjantjatjara and Yankunytjatjara, the ' + 'Aboriginal people of the area. It has many springs, waterholes, ' + 'rock caves and ancient paintings. Uluru is listed as a World ' + 'Heritage Site.</p>' + '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">' + 'https://en.wikipedia.org/w/index.php?title=Uluru</a> ' + '(last visited June 22, 2009).</p>' + '</div>' + '</div>';\n                                                                                                             //\n    var infowindow = new google.maps.InfoWindow({                                                            // 80\n      content: contentString                                                                                 // 81\n    });                                                                                                      // 80\n                                                                                                             //\n    var markers = {};                                                                                        // 84\n                                                                                                             //\n    Markers.find().observe({                                                                                 // 86\n      added: function () {                                                                                   // 87\n        function added(document) {                                                                           // 87\n                                                                                                             //\n          var marker = new google.maps.Marker({                                                              // 89\n            draggable: true,                                                                                 // 90\n            animation: google.maps.Animation.DROP,                                                           // 91\n            position: new google.maps.LatLng(document.lat, document.lng),                                    // 92\n            map: map.instance,                                                                               // 93\n            id: document._id,                                                                                // 94\n            icon: image,                                                                                     // 95\n            shape: shape,                                                                                    // 96\n            userId: curuser,                                                                                 // 97\n            title: 't'                                                                                       // 98\n                                                                                                             //\n          });                                                                                                // 89\n          if (Meteor.userId() == marker.userId) {                                                            // 101\n            marker.addListener('dragend', function () {                                                      // 102\n              if (Meteor.userId() == marker.userId) {                                                        // 103\n                Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() } });   // 103\n              } else {                                                                                       // 103\n                throw new Meteor.Error('No Access!');                                                        // 104\n              }                                                                                              // 104\n            });                                                                                              // 105\n          }                                                                                                  // 105\n          marker.addListener('rightclick', function () {                                                     // 106\n            if (Meteor.userId() != marker.userId) {                                                          // 107\n              throw new Meteor.Error(marker.userId);                                                         // 107\n            }                                                                                                // 107\n            console.log(\"Meteor.userId %s, \\n marker user %s\", Meteor.userId(), marker.userId);              // 108\n            var zmienna = marker.id;                                                                         // 109\n            markers[document._id] = marker;                                                                  // 110\n            marker.setMap(null);                                                                             // 111\n                                                                                                             //\n            Markers.remove({ _id: zmienna });                                                                // 113\n          });                                                                                                // 114\n          marker.addListener('click', function () {                                                          // 115\n            infowindow.open(map, marker);                                                                    // 116\n            if (marker.getAnimation() !== null) {                                                            // 117\n              marker.setAnimation(null);                                                                     // 118\n            } else {                                                                                         // 119\n              marker.setAnimation(google.maps.Animation.BOUNCE);                                             // 120\n            }                                                                                                // 121\n          });                                                                                                // 122\n                                                                                                             //\n          markers[document._id] = marker;                                                                    // 125\n        }                                                                                                    // 126\n                                                                                                             //\n        return added;                                                                                        // 87\n      }(),                                                                                                   // 87\n      changed: function () {                                                                                 // 127\n        function changed(newDocument, oldDocument) {                                                         // 127\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });              // 128\n        }                                                                                                    // 129\n                                                                                                             //\n        return changed;                                                                                      // 127\n      }(),                                                                                                   // 127\n      removed: function () {                                                                                 // 130\n        function removed(oldDocument) {                                                                      // 130\n          markers[oldDocument._id].setMap(null);                                                             // 131\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);                                // 132\n          delete markers[oldDocument._id];                                                                   // 133\n          //Markers.remove({_id: oldDocument._id});                                                          //\n        }                                                                                                    // 135\n                                                                                                             //\n        return removed;                                                                                      // 130\n      }()                                                                                                    // 130\n    });                                                                                                      // 86\n  });                                                                                                        // 137\n});                                                                                                          // 138\n                                                                                                             //\nMeteor.startup(function () {                                                                                 // 140\n  GoogleMaps.load();                                                                                         // 141\n});                                                                                                          // 142\n                                                                                                             //\nTemplate.map.helpers({                                                                                       // 144\n  mapOptions: function () {                                                                                  // 145\n    function mapOptions() {                                                                                  // 145\n      if (GoogleMaps.loaded()) {                                                                             // 146\n        return {                                                                                             // 147\n          center: new google.maps.LatLng(50.2880701, 18.6778916),                                            // 148\n          zoom: 15                                                                                           // 149\n        };                                                                                                   // 147\n      }                                                                                                      // 151\n    }                                                                                                        // 152\n                                                                                                             //\n    return mapOptions;                                                                                       // 145\n  }()                                                                                                        // 145\n});                                                                                                          // 144\nTemplate.map2.onCreated(function () {                                                                        // 154\n  GoogleMaps.ready('map', function (map) {                                                                   // 155\n    google.maps.event.addListener(map.instance, 'click', function (event) {                                  // 156\n      Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });                                  // 157\n    });                                                                                                      // 158\n    var curuser = Meteor.userId();                                                                           // 159\n    var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';                                                               // 160\n    var image = {                                                                                            // 161\n      url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n      // This marker is 20 pixels wide by 32 pixels high.                                                    //\n      size: new google.maps.Size(20, 32),                                                                    // 164\n      // The origin for this image is (0, 0).                                                                //\n      origin: new google.maps.Point(0, 0),                                                                   // 166\n      // The anchor for this image is the base of the flagpole at (0, 32).                                   //\n      anchor: new google.maps.Point(0, 32)                                                                   // 168\n    };                                                                                                       // 161\n    var shape = {                                                                                            // 170\n      coords: [1, 1, 1, 20, 18, 20, 18, 1],                                                                  // 171\n      type: 'poly'                                                                                           // 172\n    };                                                                                                       // 170\n    var contentString = '<div id=\"content\">' + '<div id=\"siteNotice\">' + '</div>' + '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>' + '<div id=\"bodyContent\">' + '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' + 'sandstone rock formation in the southern part of the ' + 'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) ' + 'south west of the nearest large town, Alice Springs; 450&#160;km ' + '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major ' + 'features of the Uluru - Kata Tjuta National Park. Uluru is ' + 'sacred to the Pitjantjatjara and Yankunytjatjara, the ' + 'Aboriginal people of the area. It has many springs, waterholes, ' + 'rock caves and ancient paintings. Uluru is listed as a World ' + 'Heritage Site.</p>' + '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">' + 'https://en.wikipedia.org/w/index.php?title=Uluru</a> ' + '(last visited June 22, 2009).</p>' + '</div>' + '</div>';\n                                                                                                             //\n    var infowindow = new google.maps.InfoWindow({                                                            // 195\n      content: contentString                                                                                 // 196\n    });                                                                                                      // 195\n                                                                                                             //\n    var markers = {};                                                                                        // 199\n                                                                                                             //\n    Markers.find().observe({                                                                                 // 201\n      added: function () {                                                                                   // 202\n        function added(document) {                                                                           // 202\n                                                                                                             //\n          var marker = new google.maps.Marker({                                                              // 204\n            draggable: true,                                                                                 // 205\n            animation: google.maps.Animation.DROP,                                                           // 206\n            position: new google.maps.LatLng(document.lat, document.lng),                                    // 207\n            map: map.instance,                                                                               // 208\n            id: document._id,                                                                                // 209\n            icon: image,                                                                                     // 210\n            shape: shape,                                                                                    // 211\n            userId: curuser,                                                                                 // 212\n            title: 't'                                                                                       // 213\n                                                                                                             //\n          });                                                                                                // 204\n          if (Meteor.userId() == marker.userId) {                                                            // 216\n            marker.addListener('dragend', function () {                                                      // 217\n              if (Meteor.userId() == marker.userId) {                                                        // 218\n                Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() } });   // 218\n              } else {                                                                                       // 218\n                throw new Meteor.Error('No Access!');                                                        // 219\n              }                                                                                              // 219\n            });                                                                                              // 220\n          }                                                                                                  // 220\n          marker.addListener('rightclick', function () {                                                     // 221\n            if (Meteor.userId() != marker.userId) {                                                          // 222\n              throw new Meteor.Error(marker.userId);                                                         // 222\n            }                                                                                                // 222\n            console.log(\"Meteor.userId %s, \\n marker user %s\", Meteor.userId(), marker.userId);              // 223\n            var zmienna = marker.id;                                                                         // 224\n            markers[document._id] = marker;                                                                  // 225\n            marker.setMap(null);                                                                             // 226\n                                                                                                             //\n            Markers.remove({ _id: zmienna });                                                                // 228\n          });                                                                                                // 229\n          marker.addListener('click', function () {                                                          // 230\n            infowindow.open(map, marker);                                                                    // 231\n            if (marker.getAnimation() !== null) {                                                            // 232\n              marker.setAnimation(null);                                                                     // 233\n            } else {                                                                                         // 234\n              marker.setAnimation(google.maps.Animation.BOUNCE);                                             // 235\n            }                                                                                                // 236\n          });                                                                                                // 237\n                                                                                                             //\n          markers[document._id] = marker;                                                                    // 240\n        }                                                                                                    // 241\n                                                                                                             //\n        return added;                                                                                        // 202\n      }(),                                                                                                   // 202\n      changed: function () {                                                                                 // 242\n        function changed(newDocument, oldDocument) {                                                         // 242\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });              // 243\n        }                                                                                                    // 244\n                                                                                                             //\n        return changed;                                                                                      // 242\n      }(),                                                                                                   // 242\n      removed: function () {                                                                                 // 245\n        function removed(oldDocument) {                                                                      // 245\n          markers[oldDocument._id].setMap(null);                                                             // 246\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);                                // 247\n          delete markers[oldDocument._id];                                                                   // 248\n          //Markers.remove({_id: oldDocument._id});                                                          //\n        }                                                                                                    // 250\n                                                                                                             //\n        return removed;                                                                                      // 245\n      }()                                                                                                    // 245\n    });                                                                                                      // 201\n  });                                                                                                        // 252\n});                                                                                                          // 253\n                                                                                                             //\nMeteor.startup(function () {                                                                                 // 255\n  GoogleMaps.load();                                                                                         // 256\n});                                                                                                          // 257\n                                                                                                             //\nTemplate.map2.helpers({                                                                                      // 259\n  mapOptions2: function () {                                                                                 // 260\n    function mapOptions2() {                                                                                 // 260\n      if (GoogleMaps.loaded()) {                                                                             // 261\n        return {                                                                                             // 262\n          center: new google.maps.LatLng(51.2880701, 17.6778916),                                            // 263\n          zoom: 15                                                                                           // 264\n        };                                                                                                   // 262\n      }                                                                                                      // 266\n    }                                                                                                        // 267\n                                                                                                             //\n    return mapOptions2;                                                                                      // 260\n  }()                                                                                                        // 260\n});                                                                                                          // 259\nTemplate.dodajznaczik.events({                                                                               // 269\n  'submit form': function () {                                                                               // 270\n    function submitForm(event) {                                                                             // 270\n      event.preventDefault();                                                                                // 271\n      var nazwaznaczknika = $('[name=markername]').val();                                                    // 272\n      var latx = $('[name=x]').val();                                                                        // 273\n      var laty = $('[name=y]').val();                                                                        // 274\n      var opis = $('[name=windowsinfo]').val();                                                              // 275\n      var currentUser = Meteor.userId();                                                                     // 276\n      Info.insert({                                                                                          // 277\n        nazwazn: nazwaznacznika,                                                                             // 278\n        x: latx,                                                                                             // 279\n        y: laty,                                                                                             // 280\n        opis: opis,                                                                                          // 281\n        createdBy: currentUser                                                                               // 282\n      });                                                                                                    // 277\n    }                                                                                                        // 284\n                                                                                                             //\n    return submitForm;                                                                                       // 270\n  }()                                                                                                        // 270\n});                                                                                                          // 269\nTemplate.addList.events({                                                                                    // 286\n  'submit form': function () {                                                                               // 287\n    function submitForm(event) {                                                                             // 287\n      event.preventDefault();                                                                                // 288\n      var listName = $('[name=listName]').val();                                                             // 289\n      var currentUser = Meteor.userId();                                                                     // 290\n                                                                                                             //\n      Lists.insert({                                                                                         // 292\n        name: listName,                                                                                      // 293\n        createdBy: currentUser                                                                               // 294\n      }, function (error, results) {                                                                         // 292\n        Router.go('listPage', { _id: results });                                                             // 296\n      });                                                                                                    // 297\n      $('[name=listName]').val('');                                                                          // 298\n    }                                                                                                        // 299\n                                                                                                             //\n    return submitForm;                                                                                       // 287\n  }()                                                                                                        // 287\n});                                                                                                          // 286\n                                                                                                             //\nTemplate.lists_all.helpers({                                                                                 // 302\n  'list': function () {                                                                                      // 303\n    function list() {                                                                                        // 303\n      return Lists.find({}, { sort: { name: 1 } });                                                          // 304\n    }                                                                                                        // 305\n                                                                                                             //\n    return list;                                                                                             // 303\n  }()                                                                                                        // 303\n});                                                                                                          // 302\n                                                                                                             //\nTemplate.lists.helpers({                                                                                     // 308\n  'list': function () {                                                                                      // 309\n    function list() {                                                                                        // 309\n      var currentUser = Meteor.userId();                                                                     // 310\n      return Lists.find({ createdBy: currentUser }, { sort: { name: 1 } });                                  // 311\n    }                                                                                                        // 312\n                                                                                                             //\n    return list;                                                                                             // 309\n  }()                                                                                                        // 309\n});                                                                                                          // 308\n                                                                                                             //\nTemplate.todos.helpers({                                                                                     // 315\n  'todo': function () {                                                                                      // 316\n    function todo() {                                                                                        // 316\n      var currentList = this._id;                                                                            // 317\n      var currentUser = Meteor.userId();                                                                     // 318\n      return Todos.find({ listId: currentList, createdBy: currentUser }, { sort: { createdAt: -1 } });       // 319\n    }                                                                                                        // 320\n                                                                                                             //\n    return todo;                                                                                             // 316\n  }()                                                                                                        // 316\n});                                                                                                          // 315\n                                                                                                             //\nTemplate.addTodo.events({                                                                                    // 323\n  'submit form': function () {                                                                               // 324\n    function submitForm(event) {                                                                             // 324\n      event.preventDefault();                                                                                // 325\n      var todoName = $('[name=\"todoName\"]').val();                                                           // 326\n      var currentUser = Meteor.userId();                                                                     // 327\n      var currentList = this._id;                                                                            // 328\n      Todos.insert({                                                                                         // 329\n        name: todoName,                                                                                      // 330\n        completed: false,                                                                                    // 331\n        createdAt: new Date(),                                                                               // 332\n        createdBy: currentUser,                                                                              // 333\n        listId: currentList                                                                                  // 334\n      });                                                                                                    // 329\n      $('[name=\"todoName\"]').val('');                                                                        // 336\n    }                                                                                                        // 337\n                                                                                                             //\n    return submitForm;                                                                                       // 324\n  }()                                                                                                        // 324\n});                                                                                                          // 323\n                                                                                                             //\nTemplate.todoItem.events({                                                                                   // 340\n  'click .delete-todo': function () {                                                                        // 341\n    function clickDeleteTodo(event) {                                                                        // 341\n      event.preventDefault();                                                                                // 342\n      var documentId = this._id;                                                                             // 343\n      var confirm = window.confirm(\"Delete this task?\");                                                     // 344\n      if (confirm) {                                                                                         // 345\n        Todos.remove({ _id: documentId });                                                                   // 346\n      }                                                                                                      // 347\n    }                                                                                                        // 348\n                                                                                                             //\n    return clickDeleteTodo;                                                                                  // 341\n  }(),                                                                                                       // 341\n  'keyup [name=todoItem]': function () {                                                                     // 349\n    function keyupNameTodoItem(event) {                                                                      // 349\n      if (event.which == 13 || event.which == 27) {                                                          // 350\n        $(event.target).blur();                                                                              // 351\n      } else {                                                                                               // 352\n        var documentId = this._id;                                                                           // 353\n        var todoItem = $(event.target).val();                                                                // 354\n        Todos.update({ _id: documentId }, { $set: { name: todoItem } });                                     // 355\n      }                                                                                                      // 356\n    }                                                                                                        // 357\n                                                                                                             //\n    return keyupNameTodoItem;                                                                                // 349\n  }(),                                                                                                       // 349\n  'change [type=checkbox]': function () {                                                                    // 358\n    function changeTypeCheckbox() {                                                                          // 358\n      var documentId = this._id;                                                                             // 359\n      var isCompleted = this.completed;                                                                      // 360\n      if (isCompleted) {                                                                                     // 361\n        Todos.update({ _id: documentId }, { $set: { completed: false } });                                   // 362\n        console.log(\"Task marked as incomplete.\");                                                           // 363\n      } else {                                                                                               // 364\n        Todos.update({ _id: documentId }, { $set: { completed: true } });                                    // 365\n        console.log(\"Task marked as complete.\");                                                             // 366\n      }                                                                                                      // 367\n    }                                                                                                        // 368\n                                                                                                             //\n    return changeTypeCheckbox;                                                                               // 358\n  }()                                                                                                        // 358\n                                                                                                             //\n});                                                                                                          // 340\n                                                                                                             //\nTemplate.todoItem.helpers({                                                                                  // 372\n  'checked': function () {                                                                                   // 373\n    function checked() {                                                                                     // 373\n      var isCompleted = this.completed;                                                                      // 374\n      if (isCompleted) {                                                                                     // 375\n        return \"checked\";                                                                                    // 376\n      } else {                                                                                               // 377\n        return \"\";                                                                                           // 378\n      }                                                                                                      // 379\n    }                                                                                                        // 380\n                                                                                                             //\n    return checked;                                                                                          // 373\n  }()                                                                                                        // 373\n});                                                                                                          // 372\n                                                                                                             //\nTemplate.todosCount.helpers({                                                                                // 383\n  'totalTodos': function () {                                                                                // 384\n    function totalTodos() {                                                                                  // 384\n      var currentList = this._id;                                                                            // 385\n      return Todos.find({ listId: currentList }).count();                                                    // 386\n    }                                                                                                        // 387\n                                                                                                             //\n    return totalTodos;                                                                                       // 384\n  }(),                                                                                                       // 384\n  'completedTodos': function () {                                                                            // 388\n    function completedTodos() {                                                                              // 388\n      var currentList = this._id;                                                                            // 389\n      return Todos.find({ listId: currentList, completed: true }).count();                                   // 390\n    }                                                                                                        // 391\n                                                                                                             //\n    return completedTodos;                                                                                   // 388\n  }()                                                                                                        // 388\n});                                                                                                          // 383\n                                                                                                             //\nTemplate.login.events({                                                                                      // 394\n  'submit form': function () {                                                                               // 395\n    function submitForm(event) {                                                                             // 395\n      event.preventDefault();                                                                                // 396\n      var username = $('[name=username]').val();                                                             // 397\n      var password = $('[name=password]').val();                                                             // 398\n      Meteor.loginWithPassword(username, password, function (error) {                                        // 399\n        if (error) {                                                                                         // 400\n          console.log(error.reason);                                                                         // 401\n        } else {                                                                                             // 402\n          Router.go(\"home\");                                                                                 // 403\n        }                                                                                                    // 404\n      });                                                                                                    // 405\n    }                                                                                                        // 406\n                                                                                                             //\n    return submitForm;                                                                                       // 395\n  }()                                                                                                        // 395\n});                                                                                                          // 394\n                                                                                                             //\nTemplate.register.events({                                                                                   // 409\n  'submit form': function () {                                                                               // 410\n    function submitForm(event) {                                                                             // 410\n      event.preventDefault();                                                                                // 411\n      var username = $('[name=username]').val();                                                             // 412\n      var password = $('[name=password]').val();                                                             // 413\n      Accounts.createUser({                                                                                  // 414\n        username: username,                                                                                  // 415\n        password: password                                                                                   // 416\n      }, function (error) {                                                                                  // 414\n        if (error) {                                                                                         // 418\n          console.log(error.reason);                                                                         // 419\n        } else {                                                                                             // 420\n          Router.go(\"home\");                                                                                 // 421\n        }                                                                                                    // 422\n      });                                                                                                    // 423\n    }                                                                                                        // 424\n                                                                                                             //\n    return submitForm;                                                                                       // 410\n  }()                                                                                                        // 410\n});                                                                                                          // 409\n                                                                                                             //\nTemplate.navigation.events({                                                                                 // 427\n  'click .logout': function () {                                                                             // 428\n    function clickLogout(event) {                                                                            // 428\n      event.preventDefault();                                                                                // 429\n      Meteor.logout();                                                                                       // 430\n      Router.go('login');                                                                                    // 431\n    }                                                                                                        // 432\n                                                                                                             //\n    return clickLogout;                                                                                      // 428\n  }()                                                                                                        // 428\n                                                                                                             //\n});                                                                                                          // 427\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import './main.html';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Template } from 'meteor/templating';\n\nLists = new Meteor.Collection('lists');\nTodos = new Mongo.Collection('todos');\nMarkers = new Mongo.Collection('markers');\nInfo = new Mongo.Collection('info');\nAccounts.ui.config({\n\n  passwordSignupFields: 'USERNAME_ONLY',\n\n});\n\nRouter.configure({\n    layoutTemplate: 'main'\n});\n\nRouter.route('/register');\nRouter.route('/login');\nRouter.route('/eventy');\nRouter.route('/moje_eventy');\nRouter.route('/dodaj_event');\nRouter.route('/grupy');\nRouter.route('/moje_grupy');\nRouter.route('/dodaj_grupe');\nRouter.route('/',{\n\t name: 'home',\n\t template: 'home'\n});\nRouter.route('/list/:_id', {\n\tname: 'listPage',\n\ttemplate: 'listPage',\n    data: function(){\n        var currentList = this.params._id;\n        return Lists.findOne({ _id: currentList });\n    },\n});\nTemplate.map.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n      const curuser = Meteor.userId();\n      var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n       var image = {\n          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n          // This marker is 20 pixels wide by 32 pixels high.\n          size: new google.maps.Size(20, 32),\n          // The origin for this image is (0, 0).\n          origin: new google.maps.Point(0, 0),\n          // The anchor for this image is the base of the flagpole at (0, 32).\n          anchor: new google.maps.Point(0, 32)\n        };\n\t var shape = {\n          coords: [1, 1, 1, 20, 18, 20, 18, 1],\n          type: 'poly'\n        };\n        var contentString = '<div id=\"content\">'+\n            '<div id=\"siteNotice\">'+\n            '</div>'+\n            '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>'+\n            '<div id=\"bodyContent\">'+\n            '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +\n            'sandstone rock formation in the southern part of the '+\n            'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+\n            'south west of the nearest large town, Alice Springs; 450&#160;km '+\n            '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+\n            'features of the Uluru - Kata Tjuta National Park. Uluru is '+\n            'sacred to the Pitjantjatjara and Yankunytjatjara, the '+\n            'Aboriginal people of the area. It has many springs, waterholes, '+\n            'rock caves and ancient paintings. Uluru is listed as a World '+\n            'Heritage Site.</p>'+\n            '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">'+\n            'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+\n            '(last visited June 22, 2009).</p>'+\n            '</div>'+\n            '</div>';\n\n         var infowindow = new google.maps.InfoWindow({\n          content: contentString\n        });\n\n      var markers = {};\n      \n      Markers.find().observe({\n        added: function (document) {\n\t\n          var marker = new google.maps.Marker({\n            draggable: true,\n            animation: google.maps.Animation.DROP,\n            position: new google.maps.LatLng(document.lat, document.lng),\n            map: map.instance,\n            id: document._id,\n\t    icon: image,\n            shape: shape,\n\t     userId: curuser,\n\t    title: 't'\n\t    \n          });\n\t  if(Meteor.userId()==marker.userId){\n\t    marker.addListener('dragend', function() {\n\t      if(Meteor.userId()==marker.userId){Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() }});}\n\t      else{throw new Meteor.Error('No Access!');}\n          });}\n          marker.addListener('rightclick', function() {\n\t    if(Meteor.userId()!=marker.userId){throw new Meteor.Error(marker.userId);}\n            console.log(\"Meteor.userId %s, \\n marker user %s\",Meteor.userId(),marker.userId);\n            var zmienna=marker.id;\n            markers[document._id] = marker;\n            marker.setMap(null);\n\t    \n            Markers.remove({_id: zmienna });\n          });\n\t  marker.addListener('click', function() {\n          infowindow.open(map, marker);\n\t    if (marker.getAnimation() !== null) {\n          marker.setAnimation(null);\n        } else {\n          marker.setAnimation(google.maps.Animation.BOUNCE);\n        }\n          });\n        \n\n          markers[document._id] = marker;\n        },\n        changed: function (newDocument, oldDocument) {\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });\n        },\n        removed: function (oldDocument) {\n          markers[oldDocument._id].setMap(null);\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);\n          delete markers[oldDocument._id];\n          //Markers.remove({_id: oldDocument._id});\n        }\n      });\n    });\n  });\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map.helpers({\n  mapOptions: function() {\n    if (GoogleMaps.loaded()) {\n      return {\n        center: new google.maps.LatLng(50.2880701, 18.6778916),\n        zoom: 15\n      };\n    }\n  }\n});\nTemplate.map2.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n      const curuser = Meteor.userId();\n      var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n       var image = {\n          url: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png',\n          // This marker is 20 pixels wide by 32 pixels high.\n          size: new google.maps.Size(20, 32),\n          // The origin for this image is (0, 0).\n          origin: new google.maps.Point(0, 0),\n          // The anchor for this image is the base of the flagpole at (0, 32).\n          anchor: new google.maps.Point(0, 32)\n        };\n\t var shape = {\n          coords: [1, 1, 1, 20, 18, 20, 18, 1],\n          type: 'poly'\n        };\n        var contentString = '<div id=\"content\">'+\n            '<div id=\"siteNotice\">'+\n            '</div>'+\n            '<h1 id=\"firstHeading\" class=\"firstHeading\">Uluru</h1>'+\n            '<div id=\"bodyContent\">'+\n            '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +\n            'sandstone rock formation in the southern part of the '+\n            'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+\n            'south west of the nearest large town, Alice Springs; 450&#160;km '+\n            '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+\n            'features of the Uluru - Kata Tjuta National Park. Uluru is '+\n            'sacred to the Pitjantjatjara and Yankunytjatjara, the '+\n            'Aboriginal people of the area. It has many springs, waterholes, '+\n            'rock caves and ancient paintings. Uluru is listed as a World '+\n            'Heritage Site.</p>'+\n            '<p>Attribution: Uluru, <a href=\"https://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194\">'+\n            'https://en.wikipedia.org/w/index.php?title=Uluru</a> '+\n            '(last visited June 22, 2009).</p>'+\n            '</div>'+\n            '</div>';\n\n         var infowindow = new google.maps.InfoWindow({\n          content: contentString\n        });\n\n      var markers = {};\n      \n      Markers.find().observe({\n        added: function (document) {\n\t\n          var marker = new google.maps.Marker({\n            draggable: true,\n            animation: google.maps.Animation.DROP,\n            position: new google.maps.LatLng(document.lat, document.lng),\n            map: map.instance,\n            id: document._id,\n\t    icon: image,\n            shape: shape,\n\t     userId: curuser,\n\t    title: 't'\n\t    \n          });\n\t  if(Meteor.userId()==marker.userId){\n\t    marker.addListener('dragend', function() {\n\t      if(Meteor.userId()==marker.userId){Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() }});}\n\t      else{throw new Meteor.Error('No Access!');}\n          });}\n          marker.addListener('rightclick', function() {\n\t    if(Meteor.userId()!=marker.userId){throw new Meteor.Error(marker.userId);}\n            console.log(\"Meteor.userId %s, \\n marker user %s\",Meteor.userId(),marker.userId);\n            var zmienna=marker.id;\n            markers[document._id] = marker;\n            marker.setMap(null);\n\t    \n            Markers.remove({_id: zmienna });\n          });\n\t  marker.addListener('click', function() {\n          infowindow.open(map, marker);\n\t    if (marker.getAnimation() !== null) {\n          marker.setAnimation(null);\n        } else {\n          marker.setAnimation(google.maps.Animation.BOUNCE);\n        }\n          });\n        \n\n          markers[document._id] = marker;\n        },\n        changed: function (newDocument, oldDocument) {\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });\n        },\n        removed: function (oldDocument) {\n          markers[oldDocument._id].setMap(null);\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);\n          delete markers[oldDocument._id];\n          //Markers.remove({_id: oldDocument._id});\n        }\n      });\n    });\n  });\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map2.helpers({\n  mapOptions2: function() {\n    if (GoogleMaps.loaded()) {\n      return {\n        center: new google.maps.LatLng(51.2880701, 17.6778916),\n        zoom: 15\n      };\n    }\n  }\n});\nTemplate.dodajznaczik.events({\n    'submit form': function(event){\n      event.preventDefault();\n      var nazwaznaczknika = $('[name=markername]').val();\n      var latx=$('[name=x]').val();\n      var laty=$('[name=y]').val();\n       var opis=$('[name=windowsinfo]').val();\n       var currentUser = Meteor.userId();\n        Info.insert({\n          nazwazn: nazwaznacznika,\n\t  x: latx,\n\t  y: laty,\n\t  opis: opis,\n          createdBy: currentUser\n      });\n    }\n});\nTemplate.addList.events({\n    'submit form': function(event){\n      event.preventDefault();\n      var listName = $('[name=listName]').val();\n      var currentUser = Meteor.userId();\n     \n      Lists.insert({\n          name: listName,\n          createdBy: currentUser\n      },function(error, results){\n        Router.go('listPage', { _id: results });\n  \t\t});\n      $('[name=listName]').val('');\n    }\n});\n\nTemplate.lists_all.helpers({\n    'list': function(){\n        return Lists.find({}, {sort: {name: 1}});\n    }\n});\n\nTemplate.lists.helpers({\n    'list': function(){\n    \tvar currentUser = Meteor.userId();\n        return Lists.find({createdBy: currentUser}, {sort: {name: 1}});\n    }\n});\n\nTemplate.todos.helpers({\n    'todo': function(){\n        var currentList = this._id;\n        var currentUser = Meteor.userId();\n        return Todos.find({ listId: currentList, createdBy: currentUser }, {sort: {createdAt: -1}})\n    }\n});\n\nTemplate.addTodo.events({\n    'submit form': function(event){\n    event.preventDefault();\n    var todoName = $('[name=\"todoName\"]').val();\n    var currentUser = Meteor.userId();\n    var currentList = this._id;\n    Todos.insert({\n        name: todoName,\n        completed: false,\n        createdAt: new Date(),\n        createdBy: currentUser,\n        listId: currentList\n    });\n    $('[name=\"todoName\"]').val('');\n}\n});\n\nTemplate.todoItem.events({\n    'click .delete-todo': function(event){\n    event.preventDefault();\n    var documentId = this._id;\n    var confirm = window.confirm(\"Delete this task?\");\n    if(confirm){\n        Todos.remove({ _id: documentId });\n    }\n},\n\t'keyup [name=todoItem]': function(event){\n    if(event.which == 13 || event.which == 27){\n        $(event.target).blur();\n    } else {\n        var documentId = this._id;\n        var todoItem = $(event.target).val();\n        Todos.update({ _id: documentId }, {$set: { name: todoItem }});\n    }\n},\n\t'change [type=checkbox]': function(){\n    var documentId = this._id;\n    var isCompleted = this.completed;\n    if(isCompleted){\n        Todos.update({ _id: documentId }, {$set: { completed: false }});\n        console.log(\"Task marked as incomplete.\");\n    } else {\n        Todos.update({ _id: documentId }, {$set: { completed: true }});\n        console.log(\"Task marked as complete.\");\n    }\n\t}\n\n});\n\nTemplate.todoItem.helpers({\n    'checked': function(){\n        var isCompleted = this.completed;\n        if(isCompleted){\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    }\n});\n\nTemplate.todosCount.helpers({\n    'totalTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList }).count();\n    },\n    'completedTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList, completed: true }).count();\n    }\n});\n\nTemplate.login.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Meteor.loginWithPassword(username, password, function(error){\n        \tif(error){\n        \tconsole.log(error.reason);\n    \t\t} else {\n       \t\t Router.go(\"home\");\n   \t\t\t}\n        });\n    }\n});\n\nTemplate.register.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Accounts.createUser({\n            username: username,\n            password: password\n        },  function(error){\n            if(error){\n        \tconsole.log(error.reason);\n   \t\t\t} else {\n        \tRouter.go(\"home\");\n    \t}\n\t\t});\n    }\n});\n\nTemplate.navigation.events({\n    'click .logout': function(event){\n        event.preventDefault();\n        Meteor.logout();\n        Router.go('login');\n    }\n\n});\n"]}}]