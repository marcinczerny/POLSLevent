[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nGoogleMaps = Package['dburles:google-maps'].GoogleMaps;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package['templating-runtime'].Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"main.html\":[\"./template.main.js\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.html                                                                                                 //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.exports = require(\"./template.main.js\");                                                                     // 1\n                                                                                                                    // 2\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"template.main.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/template.main.js                                                                                          //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n                                                                                                                    // 1\nTemplate.body.addContent((function() {                                                                              // 2\n  var view = this;                                                                                                  // 3\n  return \"\";                                                                                                        // 4\n}));                                                                                                                // 5\nMeteor.startup(Template.body.renderToDocument);                                                                     // 6\n                                                                                                                    // 7\nTemplate.__checkName(\"main\");                                                                                       // 8\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {                                                      // 9\n  var view = this;                                                                                                  // 10\n  return HTML.DIV({                                                                                                 // 11\n    id: \"wrapper\"                                                                                                   // 12\n  }, \"\\n  \", HTML.DIV({                                                                                             // 13\n    id: \"header\"                                                                                                    // 14\n  }, \"\\n    \", HTML.Raw('<div id=\"logo\">\\n    <a href=\"#\">\\n        <img src=\"logo1.png\" alt=\"logo\">\\n    </a>\\n    </div>'), \"\\n    \", HTML.DIV({\n    id: \"menu\"                                                                                                      // 16\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"navigation\")), \"\\n    \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"container\"                                                                                                 // 18\n  }, \"\\n    \", HTML.DIV({                                                                                           // 19\n    id: \"sidebar\"                                                                                                   // 20\n  }, \"\\n    \", HTML.Raw(\"<h1>Najnowsze wydarzenia</h1>\"), \"\\n    \", HTML.DIV({                                      // 21\n    id: \"mapa\"                                                                                                      // 22\n  }, \"\\n    \", HTML.Raw(\"<h2>Moje wydarzenia</h2>\"), \"\\n    \", HTML.Raw(\"<h3> Mapa wydarzeń</h3>\"), \"\\n    \", HTML.P(\"      \", Spacebars.include(view.lookupTemplate(\"map\"))), \"\\n  \"), \"\\n    \", HTML.Raw('<div id=\"content_box\">\\n    <h2>TRES</h2>\\n    <p><a href=\"#\">WYDARZENIE1</a></p>\\n    </div>'), \"\\n    \", HTML.Raw('<div id=\"content_box\">\\n    <h2>QUATRO</h2>\\n    <p><a href=\"#\">WYDARZENIE2</a></p>\\n    </div>'), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"solid\",                                                                                                    // 24\n    class: \"border\"                                                                                                 // 25\n  }, \"\\n    \", HTML.Raw('<div class=\"solid_title1\">Tytul1</div>'), \"\\n    \", HTML.Raw('<div class=\"solid_title2\">Tytul2</div>'), \"\\n    \", HTML.Raw(\"<p>\\n    Tekscik.\\n    </p>\"), \"\\n   \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n   \", Spacebars.include(view.lookupTemplate(\"lists\")), \"\\n    \"), \"\\n    \"), HTML.Raw('\\n    <div id=\"footer\">\\n        <p>Github link: <a href=\"https://github.com/marcinczerny/POLSLevent.git\">https://github.com/marcinczerny/POLSLevent.git</a></p>\\n    </div>\\n    '));\n}));                                                                                                                // 27\n                                                                                                                    // 28\nTemplate.__checkName(\"navigation\");                                                                                 // 29\nTemplate[\"navigation\"] = new Template(\"Template.navigation\", (function() {                                          // 30\n  var view = this;                                                                                                  // 31\n  return HTML.UL(\"\\n        \", HTML.LI(HTML.A({                                                                     // 32\n    href: function() {                                                                                              // 33\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                              // 34\n        route: \"home\"                                                                                               // 35\n      }));                                                                                                          // 36\n    }                                                                                                               // 37\n  }, \"Strona główna\")), \"\\n        \", Blaze.If(function() {                                                         // 38\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                              // 39\n  }, function() {                                                                                                   // 40\n    return [ \"\\n        \", HTML.LI(HTML.A({                                                                         // 41\n      href: \"#\",                                                                                                    // 42\n      class: \"logout\"                                                                                               // 43\n    }, \"Wyloguj się\")), \"\\n        \" ];                                                                             // 44\n  }, function() {                                                                                                   // 45\n    return [ \"\\n        \", HTML.LI(HTML.A({                                                                         // 46\n      href: function() {                                                                                            // 47\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                            // 48\n          route: \"register\"                                                                                         // 49\n        }));                                                                                                        // 50\n      }                                                                                                             // 51\n    }, \"Rejestracja\")), \"\\n        \", HTML.LI(HTML.A({                                                              // 52\n      href: function() {                                                                                            // 53\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                            // 54\n          route: \"login\"                                                                                            // 55\n        }));                                                                                                        // 56\n      }                                                                                                             // 57\n    }, \"Zaloguj się\")), \"\\n        \" ];                                                                             // 58\n  }), \"\\n    \");                                                                                                    // 59\n}));                                                                                                                // 60\n                                                                                                                    // 61\nTemplate.__checkName(\"home\");                                                                                       // 62\nTemplate[\"home\"] = new Template(\"Template.home\", (function() {                                                      // 63\n  var view = this;                                                                                                  // 64\n  return HTML.Raw('<h2>Home</h2>\\n     <div id=\"solid_box\">\\n    <h2>UNO</h2>\\n    <p>\\n    Tekscik_lewo.\\n    </p>\\n    </div>\\n    <div id=\"solid_box\" class=\"margin2\">\\n    <h2>DOS</h2>\\n    <p>\\n\\n    Tekscik_prawo.\\n    </p>\\n    </div>\\n    <div id=\"border\"></div>\\n    <div id=\"solid_box\">\\n    <div id=\"solid_boximg\">\\n    <img src=\"icon_quote.gif\" align=\"left\">\\n    </div>\\n    <a href=\"#\">\\n    <h2>CINCO</h2>\\n    </a>\\n    <p>Tekscik_dol_lewo.</p>\\n    </div>\\n    <div id=\"solid_box\" class=\"margin2\">\\n    <div id=\"solid_boximg\">\\n    <img src=\"icon_mail.gif\" align=\"left\">\\n    </div>\\n    <a href=\"#\">\\n    <h2>SEIS</h2>\\n    </a>\\n    <p>Tekscik_dol_prawo.</p>\\n    </div>');\n}));                                                                                                                // 66\n                                                                                                                    // 67\nTemplate.__checkName(\"register\");                                                                                   // 68\nTemplate[\"register\"] = new Template(\"Template.register\", (function() {                                              // 69\n  var view = this;                                                                                                  // 70\n  return HTML.Raw('<h2>Register</h2>\\n    <form class=\"register\">\\n        <p>Username: <input type=\"username\" name=\"username\"></p>\\n        <p>Password: <input type=\"password\" name=\"password\"></p>\\n        <p><input type=\"submit\" value=\"Register\"></p>\\n    </form>');\n}));                                                                                                                // 72\n                                                                                                                    // 73\nTemplate.__checkName(\"login\");                                                                                      // 74\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {                                                    // 75\n  var view = this;                                                                                                  // 76\n  return HTML.Raw('<h2>Login</h2>\\n    <form class=\"login\">\\n        <p>Username: <input type=\"username\" name=\"username\"></p>\\n        <p>Password: <input type=\"password\" name=\"password\"></p>\\n        <p><input type=\"submit\" value=\"Login\"></p>\\n    </form>');\n}));                                                                                                                // 78\n                                                                                                                    // 79\nTemplate.__checkName(\"addList\");                                                                                    // 80\nTemplate[\"addList\"] = new Template(\"Template.addList\", (function() {                                                // 81\n  var view = this;                                                                                                  // 82\n  return HTML.Raw('<form>Create a list:\\n        <input type=\"text\" placeholder=\"List name here...\" name=\"listName\">\\n    </form>');\n}));                                                                                                                // 84\n                                                                                                                    // 85\nTemplate.__checkName(\"lists\");                                                                                      // 86\nTemplate[\"lists\"] = new Template(\"Template.lists\", (function() {                                                    // 87\n  var view = this;                                                                                                  // 88\n  return [ HTML.Raw(\"<h2>Lists</h2>\\n    \"), Spacebars.include(view.lookupTemplate(\"addList\")), \"\\n    \", HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"list\"));                                                                     // 90\n  }, function() {                                                                                                   // 91\n    return [ \"\\n            \", HTML.LI(HTML.A({                                                                     // 92\n      href: function() {                                                                                            // 93\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({                                            // 94\n          route: \"listPage\"                                                                                         // 95\n        }));                                                                                                        // 96\n      }                                                                                                             // 97\n    }, Blaze.View(\"lookup:name\", function() {                                                                       // 98\n      return Spacebars.mustache(view.lookup(\"name\"));                                                               // 99\n    }))), \"\\n        \" ];                                                                                           // 100\n  }), \"\\n    \") ];                                                                                                  // 101\n}));                                                                                                                // 102\n                                                                                                                    // 103\nTemplate.__checkName(\"listPage\");                                                                                   // 104\nTemplate[\"listPage\"] = new Template(\"Template.listPage\", (function() {                                              // 105\n  var view = this;                                                                                                  // 106\n  return [ HTML.H2(\"Tasks: \", Blaze.View(\"lookup:name\", function() {                                                // 107\n    return Spacebars.mustache(view.lookup(\"name\"));                                                                 // 108\n  })), \"\\n    \", Spacebars.include(view.lookupTemplate(\"todos\")) ];                                                 // 109\n}));                                                                                                                // 110\n                                                                                                                    // 111\nTemplate.__checkName(\"todos\");                                                                                      // 112\nTemplate[\"todos\"] = new Template(\"Template.todos\", (function() {                                                    // 113\n  var view = this;                                                                                                  // 114\n  return [ Spacebars.include(view.lookupTemplate(\"addTodo\")), \"\\n    \", HTML.UL(\"\\n    \", Blaze.Each(function() {   // 115\n    return Spacebars.call(view.lookup(\"todo\"));                                                                     // 116\n  }, function() {                                                                                                   // 117\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"todoItem\")), \"\\n    \" ];                          // 118\n  }), \"\\n    \"), \"\\n\", Spacebars.include(view.lookupTemplate(\"todosCount\")) ];                                      // 119\n}));                                                                                                                // 120\n                                                                                                                    // 121\nTemplate.__checkName(\"todoItem\");                                                                                   // 122\nTemplate[\"todoItem\"] = new Template(\"Template.todoItem\", (function() {                                              // 123\n  var view = this;                                                                                                  // 124\n  return HTML.LI({                                                                                                  // 125\n    class: function() {                                                                                             // 126\n      return Spacebars.mustache(view.lookup(\"checked\"));                                                            // 127\n    }                                                                                                               // 128\n  }, \"\\n        \", HTML.INPUT(HTML.Attrs({                                                                          // 129\n    type: \"checkbox\"                                                                                                // 130\n  }, function() {                                                                                                   // 131\n    return Spacebars.attrMustache(view.lookup(\"checked\"));                                                          // 132\n  })), \"\\n        \", HTML.INPUT({                                                                                   // 133\n    type: \"text\",                                                                                                   // 134\n    value: function() {                                                                                             // 135\n      return Spacebars.mustache(view.lookup(\"name\"));                                                               // 136\n    },                                                                                                              // 137\n    name: \"todoItem\"                                                                                                // 138\n  }), HTML.Raw('\\n        [<a href=\"#\" class=\"delete-todo\">Delete</a>]\\n    '));                                    // 139\n}));                                                                                                                // 140\n                                                                                                                    // 141\nTemplate.__checkName(\"addTodo\");                                                                                    // 142\nTemplate[\"addTodo\"] = new Template(\"Template.addTodo\", (function() {                                                // 143\n  var view = this;                                                                                                  // 144\n  return HTML.Raw('<form>\\n        Create a task:\\n        <input type=\"text\" placeholder=\"Type a task here...\" name=\"todoName\">\\n    </form>');\n}));                                                                                                                // 146\n                                                                                                                    // 147\nTemplate.__checkName(\"todosCount\");                                                                                 // 148\nTemplate[\"todosCount\"] = new Template(\"Template.todosCount\", (function() {                                          // 149\n  var view = this;                                                                                                  // 150\n  return Blaze.If(function() {                                                                                      // 151\n    return Spacebars.call(view.lookup(\"totalTodos\"));                                                               // 152\n  }, function() {                                                                                                   // 153\n    return [ \"\\n    \", HTML.P(\"You have completed \", Blaze.View(\"lookup:completedTodos\", function() {               // 154\n      return Spacebars.mustache(view.lookup(\"completedTodos\"));                                                     // 155\n    }), \" out of \", Blaze.View(\"lookup:totalTodos\", function() {                                                    // 156\n      return Spacebars.mustache(view.lookup(\"totalTodos\"));                                                         // 157\n    }), \" tasks.\"), \"\\n\" ];                                                                                         // 158\n  });                                                                                                               // 159\n}));                                                                                                                // 160\n                                                                                                                    // 161\nTemplate.__checkName(\"removemarker\");                                                                               // 162\nTemplate[\"removemarker\"] = new Template(\"Template.removemarker\", (function() {                                      // 163\n  var view = this;                                                                                                  // 164\n  return HTML.LI({                                                                                                  // 165\n    class: function() {                                                                                             // 166\n      return Spacebars.mustache(view.lookup(\"checked\"));                                                            // 167\n    }                                                                                                               // 168\n  }, \"\\n        \", HTML.INPUT(HTML.Attrs({                                                                          // 169\n    type: \"checkbox\"                                                                                                // 170\n  }, function() {                                                                                                   // 171\n    return Spacebars.attrMustache(view.lookup(\"checked\"));                                                          // 172\n  })), HTML.Raw('\\n\\n        [<a href=\"#\" class=\"remove-markers\">Delete</a>]\\n    '));                              // 173\n}));                                                                                                                // 174\n                                                                                                                    // 175\nTemplate.__checkName(\"map\");                                                                                        // 176\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {                                                        // 177\n  var view = this;                                                                                                  // 178\n  return HTML.DIV({                                                                                                 // 179\n    class: \"map-containers\"                                                                                         // 180\n  }, HTML.Raw('\\n    <div id=\"floating-panel\">\\n         <input onclick=\"clearMarkers();\" type=\"button\" value=\"Hide Markers\">\\n         <input onclick=\"showMarkers();\" type=\"button\" value=\"Show All Markers\">\\n         <input onclick=\"deleteMarkers\" type=\"button\" value=\"Delete Markers\">\\n       </div>\\n     '), Spacebars.include(view.lookupTemplate(\"removemarker\")), \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"geolocationError\"));                                                         // 182\n  }, function() {                                                                                                   // 183\n    return [ \"\\n      \", Blaze._TemplateWith(function() {                                                           // 184\n      return {                                                                                                      // 185\n        name: Spacebars.call(\"map\"),                                                                                // 186\n        options: Spacebars.call(view.lookup(\"mapOptions\"))                                                          // 187\n      };                                                                                                            // 188\n    }, function() {                                                                                                 // 189\n      return Spacebars.include(view.lookupTemplate(\"googleMap\"));                                                   // 190\n    }), \"\\n    \" ];                                                                                                 // 191\n  }, function() {                                                                                                   // 192\n    return [ \"\\n      Geolocation failed: \", Blaze.View(\"lookup:geolocationError\", function() {                     // 193\n      return Spacebars.mustache(view.lookup(\"geolocationError\"));                                                   // 194\n    }), \"\\n    \" ];                                                                                                 // 195\n  }), \"\\n  \");                                                                                                      // 196\n}));                                                                                                                // 197\n                                                                                                                    // 198\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"./main.html\",\"meteor/accounts-base\",\"meteor/templating\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.js                                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.import('./main.html');var Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});\n                                                                                                                    // 2\n                                                                                                                    // 3\n                                                                                                                    //\nLists = new Meteor.Collection('lists');                                                                             // 5\nTodos = new Mongo.Collection('todos');                                                                              // 6\nMarkers = new Mongo.Collection('markers');                                                                          // 7\n                                                                                                                    //\nAccounts.ui.config({                                                                                                // 9\n                                                                                                                    //\n    passwordSignupFields: 'USERNAME_ONLY'                                                                           // 11\n                                                                                                                    //\n});                                                                                                                 // 9\n                                                                                                                    //\n//Accounts.ui.config({                                                                                              //\n                                                                                                                    //\n//passwordSignupFields: 'USERNAME_ONLY',                                                                            //\n                                                                                                                    //\n//});                                                                                                               //\n                                                                                                                    //\nRouter.configure({                                                                                                  // 24\n    layoutTemplate: 'main'                                                                                          // 25\n});                                                                                                                 // 24\n                                                                                                                    //\nRouter.route('/register');                                                                                          // 28\nRouter.route('/login');                                                                                             // 29\nRouter.route('/', {                                                                                                 // 30\n    name: 'home',                                                                                                   // 31\n    template: 'home'                                                                                                // 32\n});                                                                                                                 // 30\nRouter.route('/list/:_id', {                                                                                        // 34\n    name: 'listPage',                                                                                               // 35\n    template: 'listPage',                                                                                           // 36\n    data: function () {                                                                                             // 37\n        function data() {                                                                                           // 37\n            var currentList = this.params._id;                                                                      // 38\n            return Lists.findOne({ _id: currentList });                                                             // 39\n        }                                                                                                           // 40\n                                                                                                                    //\n        return data;                                                                                                // 37\n    }()                                                                                                             // 37\n});                                                                                                                 // 34\nTemplate.map.onCreated(function () {                                                                                // 42\n    GoogleMaps.ready('map', function (map) {                                                                        // 43\n        google.maps.event.addListener(map.instance, 'click', function (event) {                                     // 44\n            Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });                                   // 45\n        });                                                                                                         // 46\n                                                                                                                    //\n        var markers = {};                                                                                           // 48\n                                                                                                                    //\n        Markers.find().observe({                                                                                    // 50\n            added: function () {                                                                                    // 51\n                function added(document) {                                                                          // 51\n                    var marker = new google.maps.Marker({                                                           // 52\n                        draggable: true,                                                                            // 53\n                        animation: google.maps.Animation.DROP,                                                      // 54\n                        position: new google.maps.LatLng(document.lat, document.lng),                               // 55\n                        map: map.instance,                                                                          // 56\n                        id: document._id                                                                            // 57\n                    });                                                                                             // 52\n                                                                                                                    //\n                    google.maps.event.addListener(marker, 'dragend', function (event) {                             // 60\n                        Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() } });  // 61\n                    });                                                                                             // 62\n                                                                                                                    //\n                    markers[document._id] = marker;                                                                 // 64\n                }                                                                                                   // 65\n                                                                                                                    //\n                return added;                                                                                       // 51\n            }(),                                                                                                    // 51\n            changed: function () {                                                                                  // 66\n                function changed(newDocument, oldDocument) {                                                        // 66\n                    markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });           // 67\n                }                                                                                                   // 68\n                                                                                                                    //\n                return changed;                                                                                     // 66\n            }(),                                                                                                    // 66\n            removed: function () {                                                                                  // 69\n                function removed(oldDocument) {                                                                     // 69\n                    Markers[oldDocument._id].setMap(null);                                                          // 70\n                    google.maps.event.clearInstanceListeners(markers[oldDocument._id]);                             // 71\n                    delete markers[oldDocument._id];                                                                // 72\n                    markers[oldDocument._id] = NULL;                                                                // 73\n                    //Markers.remove({_id: oldDocument._id});                                                       //\n                }                                                                                                   // 75\n                                                                                                                    //\n                return removed;                                                                                     // 69\n            }()                                                                                                     // 69\n        });                                                                                                         // 50\n    });                                                                                                             // 77\n});                                                                                                                 // 78\nfunction clearMarkers() {                                                                                           // 79\n    setMapOnAll(null);                                                                                              // 80\n}                                                                                                                   // 81\n                                                                                                                    //\n// Shows any markers currently in the array.                                                                        //\nfunction showMarkers() {                                                                                            // 84\n    setMapOnAll(map);                                                                                               // 85\n}                                                                                                                   // 86\n                                                                                                                    //\n// Deletes all markers in the array by removing references to them.                                                 //\n                                                                                                                    //\nMeteor.startup(function () {                                                                                        // 91\n    GoogleMaps.load();                                                                                              // 92\n});                                                                                                                 // 93\n                                                                                                                    //\nTemplate.map.helpers({                                                                                              // 95\n    mapOptions: function () {                                                                                       // 96\n        function mapOptions() {                                                                                     // 96\n            if (GoogleMaps.loaded()) {                                                                              // 97\n                return {                                                                                            // 98\n                    center: new google.maps.LatLng(50.2880701, 18.6778916),                                         // 99\n                    zoom: 15                                                                                        // 100\n                };                                                                                                  // 98\n            }                                                                                                       // 102\n        }                                                                                                           // 103\n                                                                                                                    //\n        return mapOptions;                                                                                          // 96\n    }()                                                                                                             // 96\n});                                                                                                                 // 95\nTemplate.map.events({                                                                                               // 105\n    'deleteMarkers': function () {                                                                                  // 106\n        function deleteMarkers(event) {                                                                             // 106\n            event.preventDefault();                                                                                 // 107\n            Markers.remove({});                                                                                     // 108\n        }                                                                                                           // 109\n                                                                                                                    //\n        return deleteMarkers;                                                                                       // 106\n    }()                                                                                                             // 106\n});                                                                                                                 // 105\nTemplate.addList.events({                                                                                           // 111\n    'submit form': function () {                                                                                    // 112\n        function submitForm(event) {                                                                                // 112\n            event.preventDefault();                                                                                 // 113\n            var listName = $('[name=listName]').val();                                                              // 114\n            Lists.insert({                                                                                          // 115\n                name: listName                                                                                      // 116\n            });                                                                                                     // 115\n            $('[name=listName]').val('');                                                                           // 118\n        }                                                                                                           // 119\n                                                                                                                    //\n        return submitForm;                                                                                          // 112\n    }()                                                                                                             // 112\n});                                                                                                                 // 111\n                                                                                                                    //\nTemplate.lists.helpers({                                                                                            // 122\n    'list': function () {                                                                                           // 123\n        function list() {                                                                                           // 123\n            return Lists.find({}, { sort: { name: 1 } });                                                           // 124\n        }                                                                                                           // 125\n                                                                                                                    //\n        return list;                                                                                                // 123\n    }()                                                                                                             // 123\n});                                                                                                                 // 122\n                                                                                                                    //\nTemplate.todos.helpers({                                                                                            // 128\n    'todo': function () {                                                                                           // 129\n        function todo() {                                                                                           // 129\n            var currentList = this._id;                                                                             // 130\n            return Todos.find({ listId: currentList }, { sort: { createdAt: -1 } });                                // 131\n        }                                                                                                           // 132\n                                                                                                                    //\n        return todo;                                                                                                // 129\n    }()                                                                                                             // 129\n});                                                                                                                 // 128\n                                                                                                                    //\nTemplate.addTodo.events({                                                                                           // 135\n    'submit form': function () {                                                                                    // 136\n        function submitForm(event) {                                                                                // 136\n            event.preventDefault();                                                                                 // 137\n            var todoName = $('[name=\"todoName\"]').val();                                                            // 138\n            var currentList = this._id;                                                                             // 139\n            Todos.insert({                                                                                          // 140\n                name: todoName,                                                                                     // 141\n                completed: false,                                                                                   // 142\n                createdAt: new Date(),                                                                              // 143\n                listId: currentList                                                                                 // 144\n            });                                                                                                     // 140\n            $('[name=\"todoName\"]').val('');                                                                         // 146\n        }                                                                                                           // 147\n                                                                                                                    //\n        return submitForm;                                                                                          // 136\n    }()                                                                                                             // 136\n});                                                                                                                 // 135\n                                                                                                                    //\nTemplate.todoItem.events({                                                                                          // 150\n    'click .delete-todo': function () {                                                                             // 151\n        function clickDeleteTodo(event) {                                                                           // 151\n            event.preventDefault();                                                                                 // 152\n            var documentId = this._id;                                                                              // 153\n            var confirm = window.confirm(\"Delete this task?\");                                                      // 154\n            if (confirm) {                                                                                          // 155\n                Todos.remove({ _id: documentId });                                                                  // 156\n            }                                                                                                       // 157\n        }                                                                                                           // 158\n                                                                                                                    //\n        return clickDeleteTodo;                                                                                     // 151\n    }(),                                                                                                            // 151\n    'keyup [name=todoItem]': function () {                                                                          // 159\n        function keyupNameTodoItem(event) {                                                                         // 159\n            if (event.which == 13 || event.which == 27) {                                                           // 160\n                $(event.target).blur();                                                                             // 161\n            } else {                                                                                                // 162\n                var documentId = this._id;                                                                          // 163\n                var todoItem = $(event.target).val();                                                               // 164\n                Todos.update({ _id: documentId }, { $set: { name: todoItem } });                                    // 165\n            }                                                                                                       // 166\n        }                                                                                                           // 167\n                                                                                                                    //\n        return keyupNameTodoItem;                                                                                   // 159\n    }(),                                                                                                            // 159\n    'change [type=checkbox]': function () {                                                                         // 168\n        function changeTypeCheckbox() {                                                                             // 168\n            var documentId = this._id;                                                                              // 169\n            var isCompleted = this.completed;                                                                       // 170\n            if (isCompleted) {                                                                                      // 171\n                Todos.update({ _id: documentId }, { $set: { completed: false } });                                  // 172\n                console.log(\"Task marked as incomplete.\");                                                          // 173\n            } else {                                                                                                // 174\n                Todos.update({ _id: documentId }, { $set: { completed: true } });                                   // 175\n                console.log(\"Task marked as complete.\");                                                            // 176\n            }                                                                                                       // 177\n        }                                                                                                           // 178\n                                                                                                                    //\n        return changeTypeCheckbox;                                                                                  // 168\n    }()                                                                                                             // 168\n                                                                                                                    //\n});                                                                                                                 // 150\n                                                                                                                    //\nTemplate.todoItem.helpers({                                                                                         // 182\n    'checked': function () {                                                                                        // 183\n        function checked() {                                                                                        // 183\n            var isCompleted = this.completed;                                                                       // 184\n            if (isCompleted) {                                                                                      // 185\n                return \"checked\";                                                                                   // 186\n            } else {                                                                                                // 187\n                return \"\";                                                                                          // 188\n            }                                                                                                       // 189\n        }                                                                                                           // 190\n                                                                                                                    //\n        return checked;                                                                                             // 183\n    }()                                                                                                             // 183\n});                                                                                                                 // 182\n                                                                                                                    //\nTemplate.todosCount.helpers({                                                                                       // 193\n    'totalTodos': function () {                                                                                     // 194\n        function totalTodos() {                                                                                     // 194\n            var currentList = this._id;                                                                             // 195\n            return Todos.find({ listId: currentList }).count();                                                     // 196\n        }                                                                                                           // 197\n                                                                                                                    //\n        return totalTodos;                                                                                          // 194\n    }(),                                                                                                            // 194\n    'completedTodos': function () {                                                                                 // 198\n        function completedTodos() {                                                                                 // 198\n            var currentList = this._id;                                                                             // 199\n            return Todos.find({ listId: currentList, completed: true }).count();                                    // 200\n        }                                                                                                           // 201\n                                                                                                                    //\n        return completedTodos;                                                                                      // 198\n    }()                                                                                                             // 198\n});                                                                                                                 // 193\n                                                                                                                    //\nTemplate.login.events({                                                                                             // 204\n    'submit form': function () {                                                                                    // 205\n        function submitForm(event) {                                                                                // 205\n            event.preventDefault();                                                                                 // 206\n            var username = $('[name=username]').val();                                                              // 207\n            var password = $('[name=password]').val();                                                              // 208\n            Meteor.loginWithPassword(username, password, function (error) {                                         // 209\n                if (error) {                                                                                        // 210\n                    console.log(error.reason);                                                                      // 211\n                } else {                                                                                            // 212\n                    Router.go(\"home\");                                                                              // 213\n                }                                                                                                   // 214\n            });                                                                                                     // 215\n        }                                                                                                           // 216\n                                                                                                                    //\n        return submitForm;                                                                                          // 205\n    }()                                                                                                             // 205\n});                                                                                                                 // 204\n                                                                                                                    //\nTemplate.register.events({                                                                                          // 219\n    'submit form': function () {                                                                                    // 220\n        function submitForm(event) {                                                                                // 220\n            event.preventDefault();                                                                                 // 221\n            var username = $('[name=username]').val();                                                              // 222\n            var password = $('[name=password]').val();                                                              // 223\n            Accounts.createUser({                                                                                   // 224\n                username: username,                                                                                 // 225\n                password: password                                                                                  // 226\n            }, function (error) {                                                                                   // 224\n                if (error) {                                                                                        // 228\n                    console.log(error.reason);                                                                      // 229\n                } else {                                                                                            // 230\n                    Router.go(\"home\");                                                                              // 231\n                }                                                                                                   // 232\n            });                                                                                                     // 233\n        }                                                                                                           // 234\n                                                                                                                    //\n        return submitForm;                                                                                          // 220\n    }()                                                                                                             // 220\n});                                                                                                                 // 219\n                                                                                                                    //\nTemplate.navigation.events({                                                                                        // 237\n    'click .logout': function () {                                                                                  // 238\n        function clickLogout(event) {                                                                               // 238\n            event.preventDefault();                                                                                 // 239\n            Meteor.logout();                                                                                        // 240\n            Router.go('login');                                                                                     // 241\n        }                                                                                                           // 242\n                                                                                                                    //\n        return clickLogout;                                                                                         // 238\n    }()                                                                                                             // 238\n                                                                                                                    //\n});                                                                                                                 // 237\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["client/main.html","/client/template.main.js","/client/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["module.exports = require(\"./template.main.js\");\n","\nTemplate.body.addContent((function() {\n  var view = this;\n  return \"\";\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"main\");\nTemplate[\"main\"] = new Template(\"Template.main\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"wrapper\"\n  }, \"\\n  \", HTML.DIV({\n    id: \"header\"\n  }, \"\\n    \", HTML.Raw('<div id=\"logo\">\\n    <a href=\"#\">\\n        <img src=\"logo1.png\" alt=\"logo\">\\n    </a>\\n    </div>'), \"\\n    \", HTML.DIV({\n    id: \"menu\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"navigation\")), \"\\n    \"), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"container\"\n  }, \"\\n    \", HTML.DIV({\n    id: \"sidebar\"\n  }, \"\\n    \", HTML.Raw(\"<h1>Najnowsze wydarzenia</h1>\"), \"\\n    \", HTML.DIV({\n    id: \"mapa\"\n  }, \"\\n    \", HTML.Raw(\"<h2>Moje wydarzenia</h2>\"), \"\\n    \", HTML.Raw(\"<h3> Mapa wydarzeń</h3>\"), \"\\n    \", HTML.P(\"      \", Spacebars.include(view.lookupTemplate(\"map\"))), \"\\n  \"), \"\\n    \", HTML.Raw('<div id=\"content_box\">\\n    <h2>TRES</h2>\\n    <p><a href=\"#\">WYDARZENIE1</a></p>\\n    </div>'), \"\\n    \", HTML.Raw('<div id=\"content_box\">\\n    <h2>QUATRO</h2>\\n    <p><a href=\"#\">WYDARZENIE2</a></p>\\n    </div>'), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"solid\",\n    class: \"border\"\n  }, \"\\n    \", HTML.Raw('<div class=\"solid_title1\">Tytul1</div>'), \"\\n    \", HTML.Raw('<div class=\"solid_title2\">Tytul2</div>'), \"\\n    \", HTML.Raw(\"<p>\\n    Tekscik.\\n    </p>\"), \"\\n   \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n   \", Spacebars.include(view.lookupTemplate(\"lists\")), \"\\n    \"), \"\\n    \"), HTML.Raw('\\n    <div id=\"footer\">\\n        <p>Github link: <a href=\"https://github.com/marcinczerny/POLSLevent.git\">https://github.com/marcinczerny/POLSLevent.git</a></p>\\n    </div>\\n    '));\n}));\n\nTemplate.__checkName(\"navigation\");\nTemplate[\"navigation\"] = new Template(\"Template.navigation\", (function() {\n  var view = this;\n  return HTML.UL(\"\\n        \", HTML.LI(HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n        route: \"home\"\n      }));\n    }\n  }, \"Strona główna\")), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n        \", HTML.LI(HTML.A({\n      href: \"#\",\n      class: \"logout\"\n    }, \"Wyloguj się\")), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.LI(HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n          route: \"register\"\n        }));\n      }\n    }, \"Rejestracja\")), \"\\n        \", HTML.LI(HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n          route: \"login\"\n        }));\n      }\n    }, \"Zaloguj się\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"home\");\nTemplate[\"home\"] = new Template(\"Template.home\", (function() {\n  var view = this;\n  return HTML.Raw('<h2>Home</h2>\\n     <div id=\"solid_box\">\\n    <h2>UNO</h2>\\n    <p>\\n    Tekscik_lewo.\\n    </p>\\n    </div>\\n    <div id=\"solid_box\" class=\"margin2\">\\n    <h2>DOS</h2>\\n    <p>\\n\\n    Tekscik_prawo.\\n    </p>\\n    </div>\\n    <div id=\"border\"></div>\\n    <div id=\"solid_box\">\\n    <div id=\"solid_boximg\">\\n    <img src=\"icon_quote.gif\" align=\"left\">\\n    </div>\\n    <a href=\"#\">\\n    <h2>CINCO</h2>\\n    </a>\\n    <p>Tekscik_dol_lewo.</p>\\n    </div>\\n    <div id=\"solid_box\" class=\"margin2\">\\n    <div id=\"solid_boximg\">\\n    <img src=\"icon_mail.gif\" align=\"left\">\\n    </div>\\n    <a href=\"#\">\\n    <h2>SEIS</h2>\\n    </a>\\n    <p>Tekscik_dol_prawo.</p>\\n    </div>');\n}));\n\nTemplate.__checkName(\"register\");\nTemplate[\"register\"] = new Template(\"Template.register\", (function() {\n  var view = this;\n  return HTML.Raw('<h2>Register</h2>\\n    <form class=\"register\">\\n        <p>Username: <input type=\"username\" name=\"username\"></p>\\n        <p>Password: <input type=\"password\" name=\"password\"></p>\\n        <p><input type=\"submit\" value=\"Register\"></p>\\n    </form>');\n}));\n\nTemplate.__checkName(\"login\");\nTemplate[\"login\"] = new Template(\"Template.login\", (function() {\n  var view = this;\n  return HTML.Raw('<h2>Login</h2>\\n    <form class=\"login\">\\n        <p>Username: <input type=\"username\" name=\"username\"></p>\\n        <p>Password: <input type=\"password\" name=\"password\"></p>\\n        <p><input type=\"submit\" value=\"Login\"></p>\\n    </form>');\n}));\n\nTemplate.__checkName(\"addList\");\nTemplate[\"addList\"] = new Template(\"Template.addList\", (function() {\n  var view = this;\n  return HTML.Raw('<form>Create a list:\\n        <input type=\"text\" placeholder=\"List name here...\" name=\"listName\">\\n    </form>');\n}));\n\nTemplate.__checkName(\"lists\");\nTemplate[\"lists\"] = new Template(\"Template.lists\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<h2>Lists</h2>\\n    \"), Spacebars.include(view.lookupTemplate(\"addList\")), \"\\n    \", HTML.UL(\"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"list\"));\n  }, function() {\n    return [ \"\\n            \", HTML.LI(HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n          route: \"listPage\"\n        }));\n      }\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }))), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"listPage\");\nTemplate[\"listPage\"] = new Template(\"Template.listPage\", (function() {\n  var view = this;\n  return [ HTML.H2(\"Tasks: \", Blaze.View(\"lookup:name\", function() {\n    return Spacebars.mustache(view.lookup(\"name\"));\n  })), \"\\n    \", Spacebars.include(view.lookupTemplate(\"todos\")) ];\n}));\n\nTemplate.__checkName(\"todos\");\nTemplate[\"todos\"] = new Template(\"Template.todos\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"addTodo\")), \"\\n    \", HTML.UL(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"todo\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"todoItem\")), \"\\n    \" ];\n  }), \"\\n    \"), \"\\n\", Spacebars.include(view.lookupTemplate(\"todosCount\")) ];\n}));\n\nTemplate.__checkName(\"todoItem\");\nTemplate[\"todoItem\"] = new Template(\"Template.todoItem\", (function() {\n  var view = this;\n  return HTML.LI({\n    class: function() {\n      return Spacebars.mustache(view.lookup(\"checked\"));\n    }\n  }, \"\\n        \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"checked\"));\n  })), \"\\n        \", HTML.INPUT({\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    },\n    name: \"todoItem\"\n  }), HTML.Raw('\\n        [<a href=\"#\" class=\"delete-todo\">Delete</a>]\\n    '));\n}));\n\nTemplate.__checkName(\"addTodo\");\nTemplate[\"addTodo\"] = new Template(\"Template.addTodo\", (function() {\n  var view = this;\n  return HTML.Raw('<form>\\n        Create a task:\\n        <input type=\"text\" placeholder=\"Type a task here...\" name=\"todoName\">\\n    </form>');\n}));\n\nTemplate.__checkName(\"todosCount\");\nTemplate[\"todosCount\"] = new Template(\"Template.todosCount\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"totalTodos\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"You have completed \", Blaze.View(\"lookup:completedTodos\", function() {\n      return Spacebars.mustache(view.lookup(\"completedTodos\"));\n    }), \" out of \", Blaze.View(\"lookup:totalTodos\", function() {\n      return Spacebars.mustache(view.lookup(\"totalTodos\"));\n    }), \" tasks.\"), \"\\n\" ];\n  });\n}));\n\nTemplate.__checkName(\"removemarker\");\nTemplate[\"removemarker\"] = new Template(\"Template.removemarker\", (function() {\n  var view = this;\n  return HTML.LI({\n    class: function() {\n      return Spacebars.mustache(view.lookup(\"checked\"));\n    }\n  }, \"\\n        \", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"checked\"));\n  })), HTML.Raw('\\n\\n        [<a href=\"#\" class=\"remove-markers\">Delete</a>]\\n    '));\n}));\n\nTemplate.__checkName(\"map\");\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"map-containers\"\n  }, HTML.Raw('\\n    <div id=\"floating-panel\">\\n         <input onclick=\"clearMarkers();\" type=\"button\" value=\"Hide Markers\">\\n         <input onclick=\"showMarkers();\" type=\"button\" value=\"Show All Markers\">\\n         <input onclick=\"deleteMarkers\" type=\"button\" value=\"Delete Markers\">\\n       </div>\\n     '), Spacebars.include(view.lookupTemplate(\"removemarker\")), \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"geolocationError\"));\n  }, function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        name: Spacebars.call(\"map\"),\n        options: Spacebars.call(view.lookup(\"mapOptions\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"googleMap\"));\n    }), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      Geolocation failed: \", Blaze.View(\"lookup:geolocationError\", function() {\n      return Spacebars.mustache(view.lookup(\"geolocationError\"));\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","import './main.html';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Template } from 'meteor/templating';\n\nLists = new Meteor.Collection('lists');\nTodos = new Mongo.Collection('todos');\nMarkers = new Mongo.Collection('markers');\n\nAccounts.ui.config({\n\n  passwordSignupFields: 'USERNAME_ONLY',\n\n});\n\n\n\n//Accounts.ui.config({\n\n  //passwordSignupFields: 'USERNAME_ONLY',\n\n//});\n\n\nRouter.configure({\n    layoutTemplate: 'main'\n});\n\nRouter.route('/register');\nRouter.route('/login');\nRouter.route('/',{\n\t name: 'home',\n\t template: 'home'\n});\nRouter.route('/list/:_id', {\n\tname: 'listPage',\n\ttemplate: 'listPage',\n    data: function(){\n        var currentList = this.params._id;\n        return Lists.findOne({ _id: currentList });\n    },\n});\nTemplate.map.onCreated(function() {\n    GoogleMaps.ready('map', function(map) {\n      google.maps.event.addListener(map.instance, 'click', function(event) {\n        Markers.insert({ lat: event.latLng.lat(), lng: event.latLng.lng() });\n      });\n\n      var markers = {};\n\n      Markers.find().observe({\n        added: function (document) {\n          var marker = new google.maps.Marker({\n            draggable: true,\n            animation: google.maps.Animation.DROP,\n            position: new google.maps.LatLng(document.lat, document.lng),\n            map: map.instance,\n            id: document._id\n          });\n\n          google.maps.event.addListener(marker, 'dragend', function(event) {\n            Markers.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() }});\n          });\n\n          markers[document._id] = marker;\n        },\n        changed: function (newDocument, oldDocument) {\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });\n        },\n        removed: function (oldDocument) {\n          Markers[oldDocument._id].setMap(null);\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);\n          delete markers[oldDocument._id];\n          markers[oldDocument._id]=NULL;\n          //Markers.remove({_id: oldDocument._id});\n        }\n      });\n    });\n  });\n  function clearMarkers() {\n          setMapOnAll(null);\n        }\n\n        // Shows any markers currently in the array.\n        function showMarkers() {\n          setMapOnAll(map);\n        }\n\n        // Deletes all markers in the array by removing references to them.\n\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map.helpers({\n  mapOptions: function() {\n    if (GoogleMaps.loaded()) {\n      return {\n        center: new google.maps.LatLng(50.2880701, 18.6778916),\n        zoom: 15\n      };\n    }\n  }\n});\nTemplate.map.events({\n'deleteMarkers': function(event) {\n  event.preventDefault();\n      Markers.remove({});\n    }\n  });\nTemplate.addList.events({\n    'submit form': function(event){\n      event.preventDefault();\n      var listName = $('[name=listName]').val();\n      Lists.insert({\n          name: listName\n      });\n      $('[name=listName]').val('');\n    }\n});\n\nTemplate.lists.helpers({\n    'list': function(){\n        return Lists.find({}, {sort: {name: 1}});\n    }\n});\n\nTemplate.todos.helpers({\n    'todo': function(){\n        var currentList = this._id;\n        return Todos.find({ listId: currentList }, {sort: {createdAt: -1}})\n    }\n});\n\nTemplate.addTodo.events({\n    'submit form': function(event){\n    event.preventDefault();\n    var todoName = $('[name=\"todoName\"]').val();\n    var currentList = this._id;\n    Todos.insert({\n        name: todoName,\n        completed: false,\n        createdAt: new Date(),\n        listId: currentList\n    });\n    $('[name=\"todoName\"]').val('');\n}\n});\n\nTemplate.todoItem.events({\n    'click .delete-todo': function(event){\n    event.preventDefault();\n    var documentId = this._id;\n    var confirm = window.confirm(\"Delete this task?\");\n    if(confirm){\n        Todos.remove({ _id: documentId });\n    }\n},\n\t'keyup [name=todoItem]': function(event){\n    if(event.which == 13 || event.which == 27){\n        $(event.target).blur();\n    } else {\n        var documentId = this._id;\n        var todoItem = $(event.target).val();\n        Todos.update({ _id: documentId }, {$set: { name: todoItem }});\n    }\n},\n\t'change [type=checkbox]': function(){\n    var documentId = this._id;\n    var isCompleted = this.completed;\n    if(isCompleted){\n        Todos.update({ _id: documentId }, {$set: { completed: false }});\n        console.log(\"Task marked as incomplete.\");\n    } else {\n        Todos.update({ _id: documentId }, {$set: { completed: true }});\n        console.log(\"Task marked as complete.\");\n    }\n\t}\n\n});\n\nTemplate.todoItem.helpers({\n    'checked': function(){\n        var isCompleted = this.completed;\n        if(isCompleted){\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    }\n});\n\nTemplate.todosCount.helpers({\n    'totalTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList }).count();\n    },\n    'completedTodos': function(){\n    \tvar currentList = this._id;\n        return Todos.find({ listId: currentList, completed: true }).count();\n    }\n});\n\nTemplate.login.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Meteor.loginWithPassword(username, password, function(error){\n        \tif(error){\n        \tconsole.log(error.reason);\n    \t\t} else {\n       \t\t Router.go(\"home\");\n   \t\t\t}\n        });\n    }\n});\n\nTemplate.register.events({\n    'submit form': function(event){\n        event.preventDefault();\n        var username = $('[name=username]').val();\n        var password = $('[name=password]').val();\n        Accounts.createUser({\n            username: username,\n            password: password\n        },  function(error){\n            if(error){\n        \tconsole.log(error.reason);\n   \t\t\t} else {\n        \tRouter.go(\"home\");\n    \t}\n\t\t});\n    }\n});\n\nTemplate.navigation.events({\n    'click .logout': function(event){\n        event.preventDefault();\n        Meteor.logout();\n        Router.go('login');\n    }\n\n});\n"]}}]